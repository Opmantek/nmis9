## $Id: Model-CiscoASR.nmis,v 8.1 2012/12/03 04:13:26 keiths Exp $
#
#  Copyright 1999-2011 Opmantek Limited (www.opmantek.com)
#
#  ALL CODE MODIFICATIONS MUST BE SENT TO CODE@OPMANTEK.COM
#
#  This file is part of Network Management Information System (“NMIS”).
#
#  NMIS is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  NMIS is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with NMIS (most likely in a file named LICENSE).
#  If not, see <http://www.gnu.org/licenses/>
#
#  For further information on NMIS or for a license other than GPL please see
#  www.opmantek.com or email contact@opmantek.com
#
#  User group details:
#  http://support.opmantek.com/users/
#
# *****************************************************************************

%hash = (
  '-common-' => {
    'class' => {
      'database' => {
        'common-model' => 'database'
      },
      'calls' => {
        'common-model' => 'calls'
      },
      'threshold' => {
        'common-model' => 'threshold'
      },
      'cbqos-in' => {
        'common-model' => 'cbqos-in'
      },
      'heading' => {
        'common-model' => 'heading'
      },
      'stats' => {
        'common-model' => 'stats'
      },
      'cbqos-out' => {
        'common-model' => 'cbqos-out'
      },
      'event' => {
        'common-model' => 'event'
      },
      'asset' => {
        'common-model' => 'Cisco-asset'
      },
      'cbqos' => {
        'common-model' => 'Cisco-cbqos'
      },
      'neighbor' => {
        'common-model' => 'Cisco-neighbor'
      },
      'routing' => {
        'common-model' => 'routing'
      },
      'status' => {
        'common-model' => 'Cisco-status'
      },
    }
  },
  'systemHealth' => {
    'sections' => 'Cisco_CBQoS,cdp,entityMib,ciscoAsset,addressTable,bgpPeer,ospfNbr,fanStatus,psuStatus,tempStatus',
  },
'system' => {
	'nodeType' => 'router',
	'nodeModel' => 'CiscoASR',
	'rrd' => {
		'nodehealth' => {
			'snmp' => {
				'avgBusy1' => {
					'oid' => 'cpmCPUTotal1minRev.2'
				},
				'avgBusy5' => {
					'oid' => 'cpmCPUTotal5minRev.2'
				},
				'MemoryUsedPROC' => {
					'oid' => 'ciscoMemoryPoolUsed.1'
				},
				'MemoryFreePROC' => {
					'oid' => 'ciscoMemoryPoolFree.1'
				},
				'RouteNumber' => {
					'oid' => 'ipCidrRouteNumber'
				}
			},
			'threshold' => 'cpu,mem-proc',
			'graphtype' => 'cpu,mem-proc,routenumber'
		}
	},
	'sys' => {
		'standard' => {
			'snmp' => {
				'sysLocation' => {
					'replace' => {
						'' => 'default'
					},
					'oid' => 'sysLocation',
					'title' => 'Location'
				},
				'sysDescr' => {
					'oid' => 'sysDescr',
					'title' => 'Description'
				},
				'sysObjectID' => {
					'oid' => 'sysObjectID'
				},
				'sysUpTime' => {
					'oid' => 'sysUpTime',
					'title' => 'Uptime'
				},
				'ifNumber' => {
					'oid' => 'ifNumber',
					'title' => 'Interfaces'
				},
				'sysContact' => {
					'replace' => {
						'' => 'default'
					},
					'oid' => 'sysContact',
					'title' => 'Contact'
				},
				'sysName' => {
					'oid' => 'sysName'
				}
			}
		}
	},
	'nodeVendor' => 'Cisco Systems',
	'nodegraph' => 'health,response,cpu,ip,mem-proc,routenumber'
},
'interface' => {
	'sys' => {
		'standard' => {
      'headers' => 'ifIndex,ifDescr,Description,ifAdminStatus,ifOperStatus,ifType,ifPhysAddress,ifSpeed,ifHighSpeed,ifLastChange,collect,nocollect',
			'snmp' => {
				'ifOperStatus' => {
					'replace' => {
						'6' => 'notPresent',
						'1' => 'up',
						'4' => 'unknown',
						'3' => 'testing',
						'7' => 'lowerLayerDown',
						'2' => 'down',
						'5' => 'dormant'
					},
					'oid' => 'ifOperStatus',
					'title' => ' Oper Status',
				},
				'ifDescr' => {
					'oid' => 'ifDescr',
					'title' => ' Name',
		    },

				'ifPhysAddress' => {
					'oid' => 'ifPhysAddress',
					'title' => 'Physical Address',
				},

				'ifSpeed' => {
					'oid' => 'ifSpeed',
					'title' => ' Bandwidth'
				},
				'ifAdminStatus' => {
					'replace' => {
						'6' => 'notPresent',
						'1' => 'up',
						'4' => 'unknown',
						'3' => 'testing',
						'7' => 'lowerLayerDown',
						'2' => 'down',
						'5' => 'dormant'
					},
					'oid' => 'ifAdminStatus',
					'title' => ' Admin Status'
				},
				'ifType' => {
					'oid' => 'ifType',
					'title' => ' Type'
				},
				'ifLastChange' => {
					'oid' => 'ifLastChange',
					'title' => ' Last Change'
				}
			},
			'indexed' => 'true'
		},
		'extra' => {
			'indexed' => 'true',
			'snmp' => {
				'ifHighSpeed' => {
					'oid' => 'ifHighSpeed'
				},
				'Description' => {
					'oid' => 'ifAlias',
					'title' => ' Description'
				},
			}
		}
	},
	'rrd' => {
		'interface' => {
			'indexed' => 'true',
			'snmp' => {
				'ifOperStatus' => {
					'replace' => {
						'6' => 'notPresent',
						'1' => 'up',
						'4' => 'unknown',
						'3' => 'testing',
						'7' => 'lowerLayerDown',
						'2' => 'down',
						'5' => 'dormant'
					},
					'oid' => 'ifOperStatus',
					'option' => 'gauge,0:100'
				},
				'ifDescr' => {
					'oid' => 'ifDescr'
				},
				'ifInOctets' => {
					'oid' => 'ifInOctets',
					'option' => 'counter,0:U'
				},
				'ifHCOutOctets' => {
					'oid' => 'ifHCOutOctets',
					'option' => 'counter,0:U'
				},
				'ifAdminStatus' => {
					'replace' => {
						'6' => 'notPresent',
						'1' => 'up',
						'4' => 'unknown',
						'3' => 'testing',
						'7' => 'lowerLayerDown',
						'2' => 'down',
						'5' => 'dormant'
					},
					'oid' => 'ifAdminStatus'
				},
				'ifOutOctets' => {
					'oid' => 'ifOutOctets',
					'option' => 'counter,0:U'
				},
				'ifHCInOctets' => {
					'oid' => 'ifHCInOctets',
					'option' => 'counter,0:U'
				}
			},
			'threshold' => 'util_in,util_out',
			'graphtype' => 'bits,abits,maxbits,util,autil'
		},
		'pkts_hc' => {
			'indexed' => 'true',
      'threshold' => 'pkt_errors_in,pkt_errors_out',
      'graphtype' => 'pkts_hc,errpkts_hc',
			'snmp' => {
				'ifInOctets' => {
					'oid' => 'ifInOctets',
					'option' => 'counter,0:U'
				},
				'ifInUcastPkts' => {
					'oid' => 'ifInUcastPkts',
					'option' => 'counter,0:U'
				},
				'ifInMcastPkts' => {
					'oid' => 'ifInMulticastPkts',
					'option' => 'counter,0:U'
				},
				'ifInBcastPkts' => {
					'oid' => 'ifInBroadcastPkts',
					'option' => 'counter,0:U'
				},
				'ifInDiscards' => {
					'oid' => 'ifInDiscards',
					'option' => 'counter,0:U'
				},
				'ifInErrors' => {
					'oid' => 'ifInErrors',
					'option' => 'counter,0:U'
				},
				'ifOutOctets' => {
					'oid' => 'ifOutOctets',
					'option' => 'counter,0:U'
				},
				'ifOutUcastPkts' => {
					'oid' => 'ifOutUcastPkts',
					'option' => 'counter,0:U'
				},
				'ifOutMcastPkts' => {
					'oid' => 'ifOutMulticastPkts',
					'option' => 'counter,0:U'
				},
				'ifOutBcastPkts' => {
					'oid' => 'ifOutBroadcastPkts',
					'option' => 'counter,0:U'
				},
				'ifOutDiscards' => {
					'oid' => 'ifOutDiscards',
					'option' => 'counter,0:U'
				},
				'ifOutErrors' => {
					'oid' => 'ifOutErrors',
					'option' => 'counter,0:U'
				},
				'ifHCInOctets' => {
					'oid' => 'ifHCInOctets',
					'option' => 'counter,0:U'
				},
				'ifHCInUcastPkts' => {
					'oid' => 'ifHCInUcastPkts',
					'option' => 'counter,0:U'
				},
				'ifHCInMcastPkts' => {
					'oid' => 'ifHCInMulticastPkts',
					'option' => 'counter,0:U'
				},
				'ifHCInBcastPkts' => {
					'oid' => 'ifHCInBroadcastPkts',
					'option' => 'counter,0:U'
				},
				'ifHCOutOctets' => {
					'oid' => 'ifHCOutOctets',
					'option' => 'counter,0:U'
				},
				'ifHCOutUcastPkts' => {
					'oid' => 'ifHCOutUcastPkts',
					'option' => 'counter,0:U'
				},
				'ifHCOutMcastPkts' => {
					'oid' => 'ifHCOutMulticastPkts',
					'option' => 'counter,0:U'
				},
				'ifHCOutBcastPkts' => {
					'oid' => 'ifHCOutBroadcastPkts',
					'option' => 'counter,0:U'
				}
			}
		}
	},
	'noevent' => {
		'ifDescr' => 'null',
		'Description' => '^!|^0',
		'ifType' => 'other'
	},
	'collect' => {
		'Description' => '(CNOC|Collection)',
	},
	'nocollect' => {
		'ifOperStatus' => 'null',
		'ifDescr' => 'sublayer|null|controller',
		'Description' => '^#',
		'noDescription' => 'true',
		'ifType' => 'other|softwareloopback|propVirtual|slip'
	}
},
'stats' => {
	'type' => {
		'nodehealth' => [
		'DEF:avgBusy1=$database:avgBusy1:AVERAGE',
		'DEF:avgBusy5=$database:avgBusy5:AVERAGE',
		'DEF:MemPUsed=$database:MemoryUsedPROC:AVERAGE',
		'DEF:MemPFree=$database:MemoryFreePROC:AVERAGE',
		'CDEF:totalPMem=MemPUsed,MemPFree,+',
		'CDEF:perPUsedMem=MemPUsed,totalPMem,/,100,*',
		'CDEF:perPFreeMem=MemPFree,totalPMem,/,100,*',
		'PRINT:avgBusy1:AVERAGE:avgBusy1min=%1.2lf',
		'PRINT:avgBusy5:AVERAGE:avgBusy5min=%1.2lf',
		'PRINT:perPUsedMem:AVERAGE:ProcMemUsed=%1.2lf',
		'PRINT:perPFreeMem:AVERAGE:ProcMemFree=%1.2lf'
		]
	}
},
'summary' => {
  'statstype' => {
    'nodehealth' => {
      'sumname' => {
        'memory' => {
          'stsname' => [
            'ProcMemUsed'
          ]
        },
        'cpu' => {
          'stsname' => [
            'avgBusy5min'
          ]
        }
      }
    },
    'health' => {
      'sumname' => {
        'reachable' => {
          'stsname' => [
            'reachable'
          ]
        },
        'response' => {
          'stsname' => [
            'response'
          ]
        },
        'available' => {
          'stsname' => [
            'available'
          ]
        }
      }
    }
  }
}
);
