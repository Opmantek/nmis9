#  Copyright 1999-2014 Opmantek Limited (www.opmantek.com)
#  
#  ALL CODE MODIFICATIONS MUST BE SENT TO CODE@OPMANTEK.COM
#  
#  This file is part of Network Management Information System (“NMIS”).
#  
#  NMIS is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  NMIS is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with NMIS (most likely in a file named LICENSE).  
#  If not, see <http://www.gnu.org/licenses/>
#  
#  For further information on NMIS or for a license other than GPL please see
#  www.opmantek.com or email contact@opmantek.com 
#  
#  User group details:
#  http://support.opmantek.com/users/
#  
# *****************************************************************************

# model for Scientific-Atlanta D98XX satellite receivers
%hash = (
  '-common-' => {
    'class' => {
      'database' => {
        'common-model' => 'database',
      },
			'threshold' => {
        'common-model' => 'threshold',
      },
      'summary' => {
        'common-model' => 'summary',
      },
      'heading' => {
        'common-model' => 'heading',
      },
      'stats' => {
        'common-model' => 'stats',
      },
      'event' => {
        'common-model' => 'event',
      }
    }
  },
	
  'interface' => {
    'sys' => {
      'standard' => {
        'indexed' => 'true',
        'snmp' => {
          'ifOperStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
									'oid' => 'ifOperStatus',
									'title' => 'Oper Status',
          },
          'ifDescr' => {
            'oid' => 'ifDescr',
            'title' => 'Name'
          },
					'ifPhysAddress' => {
            'oid' => 'ifPhysAddress',
            'title' => 'Physical Address',
          },

          'ifSpeed' => {
            'oid' => 'ifSpeed',
            'title' => 'Bandwidth'
          },
          'ifAdminStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifAdminStatus',
            'title' => 'Admin Status'
          },
          'ifType' => {
            'oid' => 'ifType',
            'title' => 'Type'
          },
          'ifLastChange' => {
            'oid' => 'ifLastChange',
            'title' => 'Last Change'
          }
        }
      }
    },

    'rrd' => {
      'interface' => {
        'indexed' => 'true',
        'snmp' => {
          'ifOperStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifOperStatus',
            'option' => 'gauge,0:100'
          },
          'ifDescr' => {
            'oid' => 'ifDescr'
          },
          'ifInOctets' => {
            'oid' => 'ifInOctets',
            'option' => 'counter,0:U'
          },
          'ifAdminStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifAdminStatus'
          },
          'ifOutOctets' => {
            'oid' => 'ifOutOctets',
            'option' => 'counter,0:U'
          },
        },
        'threshold' => 'util_in,util_out',
        'graphtype' => 'bits,abits,maxbits,util,autil'
      },
      'pkts' => {
        'indexed' => 'true',
        'snmp' => {
          'ifInUcastPkts' => {
            'oid' => 'ifInUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifInDiscards' => {
            'oid' => 'ifInDiscards',
            'option' => 'counter,0:U'
          },
          'ifOutErrors' => {
            'oid' => 'ifOutErrors',
            'option' => 'counter,0:U'
          },
          'ifInNUcastPkts' => {
            'oid' => 'ifInNUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifOutDiscards' => {
            'oid' => 'ifOutDiscards',
            'option' => 'counter,0:U'
          },
          'ifInErrors' => {
            'oid' => 'ifInErrors',
            'option' => 'counter,0:U'
          },
          'ifOutNUcastPkts' => {
            'oid' => 'ifOutNUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifOutUcastPkts' => {
            'oid' => 'ifOutUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifInOctets' => {
            'oid' => 'ifInOctets',
            'option' => 'counter,0:U'
          },
          'ifOutOctets' => {
            'oid' => 'ifOutOctets',
            'option' => 'counter,0:U'
          },
        },
        'graphtype' => 'pkts,errpkts',
      }
    },

    'collect' => {
      'Description' => '(CNOC|Collection)',
    },

    'nocollect' => {
      'ifOperStatus' => 'other',
      'ifDescr' => 'sublayer|null',
      'Description' => '^#',
      'noDescription' => 'false',
      'ifType' => 'other|softwareloopback|isdn'
    },
					'noevent' => {
						'Description' => '^!',
						'ifDescr' => 'null',
						'ifType' => 'other'
			}
  },	# interface
	
  'system' => {
    'nodegraph' => 'health,response,ip',
    'nodeModel' => 'SciAtl',
    'nodeType' => 'generic',
    'sys' => {
      'standard' => {
        'snmp' => {
          'sysLocation' => {
            'replace' => {
              '' => 'default'
            },
            'oid' => 'sysLocation',
            'title' => 'Location'
          },
          'sysDescr' => {
            'oid' => 'sysDescr',
            'title' => 'Description'
          },
          'sysObjectID' => {
            'oid' => 'sysObjectID'
          },
          'sysUpTime' => {
            'oid' => 'sysUpTime',
            'title' => 'Uptime'
          },
          'ifNumber' => {
            'oid' => 'ifNumber',
            'title' => 'Interfaces'
          },
          'sysContact' => {
            'replace' => {
              '' => 'default'
            },
            'oid' => 'sysContact',
            'title' => 'Contact'
          },
          'sysName' => {
            'oid' => 'sysName'
          }
        }
      }, # standard
    },
    'rrd' => {
      'mib2ip' => {
        'snmp' => {
          'ipInAddrErrors' => {
            'oid' => 'ipInAddrErrors',
            'option' => 'counter,0:U'
          },
          'ipFragCreates' => {
            'oid' => 'ipFragCreates',
            'option' => 'counter,0:U'
          },
          'ipInDiscards' => {
            'oid' => 'ipInDiscards',
            'option' => 'counter,0:U'
          },
          'ipInReceives' => {
            'oid' => 'ipInReceives',
            'option' => 'counter,0:U'
          },
          'ipFragOKs' => {
            'oid' => 'ipFragOKs',
            'option' => 'counter,0:U'
          },
          'ipInDelivers' => {
            'oid' => 'ipInDelivers',
            'option' => 'counter,0:U'
          },
          'ipReasmFails' => {
            'oid' => 'ipReasmFails',
            'option' => 'counter,0:U'
          },
          'ipReasmReqds' => {
            'oid' => 'ipReasmReqds',
            'option' => 'counter,0:U'
          },
          'ipFragFails' => {
            'oid' => 'ipFragFails',
            'option' => 'counter,0:U'
          },
          'ipOutRequests' => {
            'oid' => 'ipOutRequests',
            'option' => 'counter,0:U'
          },
          'ipOutNoRoutes' => {
            'oid' => 'ipOutNoRoutes'
          },
          'ipInHdrErrors' => {
            'oid' => 'ipInHdrErrors',
            'option' => 'counter,0:U'
          },
          'ipForwDatagrams' => {
            'oid' => 'ipForwDatagrams',
            'option' => 'counter,0:U'
          },
          'ipOutDiscards' => {
            'oid' => 'ipOutDiscards',
            'option' => 'counter,0:U'
          },
          'ipReasmOKs' => {
            'oid' => 'ipReasmOKs',
            'option' => 'counter,0:U'
          },
          'ipInUnknownProtos' => {
            'oid' => 'ipInUnknownProtos',
            'option' => 'counter,0:U'
          }
        },
        'graphtype' => 'ip,frag'
      }, 	# mib2ip
    },
						
	}, # system
	
	'systemHealth' => {
		sections => 'SignalStatus',
		sys => {
			'SignalStatus' => {
				'indexed' => 'saFeDemodNum',
				'index_oid' => '1.3.6.1.4.1.1429.2.2.6.2.12.1.1.1', # saFeDemodNum
				
				headers => 'demodnum,rfinputname',
				snmp => {
					'demodnum' => {
						title => "Demodulator Number",
						oid => '1.3.6.1.4.1.1429.2.2.6.2.12.1.1.1', # saFeDemodNum
					},
					'rfinputname' => {
						title => "Current RF Input",
						oid => '1.3.6.1.4.1.1429.2.2.6.2.12.1.1.2', # saFeCurrentInput
						replace => {
							'1' => "ASI",
							'2' => "RF1",
							'3' => "RF2",
							'4' => "RF3",
							'5' => "RF4", },
					},
					'demodchipid' => {
						title => "Demodulator chip ID",
						oid => '1.3.6.1.4.1.1429.2.2.6.2.12.1.1.3', # saFeDemodChipId
					},
				}, # snmp
			}, # signalstatus 
		}, # sys

		rrd => {
			'SignalStatus' => {
				indexed => 'true',
				graphtype => "SignalLevel,SignalErrors",
				snmp => {
					'demodnum' => {
						title => "Demodulator Number",
						oid => '1.3.6.1.4.1.1429.2.2.6.2.12.1.1.1', # saFeDemodNum
						option => 'gauge,0:U',
					},
					'rfinput' => {
						title => "Current RF Input",
						oid => '1.3.6.1.4.1.1429.2.2.6.2.12.1.1.2', # saFeCurrentInput
						option => 'gauge,0:U',
					},
					'rfsignalstate' => {
						title => "RF Signal Lock",
						oid => '1.3.6.1.4.1.1429.2.2.6.2.12.1.1.5',  # saFeSignalState, string yes/no
						calculate => 'CVAR1=rfsignalstate; return "$CVAR1" eq "Yes"? 1:0;',
						option => 'gauge,0:1',
					},
					'qpskbiterr' => {
						title => "QPSK Bit Error Rate",
						oid =>  '1.3.6.1.4.1.1429.2.2.6.2.12.1.1.8', # saFeQPSKBitErrorRate, string in N.MMe+K form
						calculate => 'CVAR1=qpskbiterr; return sprintf("%.15f",$CVAR1);',
						option => 'gauge,0:U',
					},
					'pvbiterr' => {
						title => "PV Bit Error Rate",
						oid => '1.3.6.1.4.1.1429.2.2.6.2.12.1.1.9', # saFePVBitErrorRate, string in N.MMe+K form
						calculate => 'CVAR1=pvbiterr; return sprintf("%.15f",$CVAR1);',
						option => 'gauge,0:U',
					},
					'snr' => {
						title => "Signal to Noise Ratio",
						oid => '1.3.6.1.4.1.1429.2.2.6.2.12.1.1.10', # saFeSignalRatio
						option => 'gauge,0:U',
					},
					'signallevel' => {
						title => "Signal Level",
						oid => '1.3.6.1.4.1.1429.2.2.6.2.12.1.1.11', # saFeSignalLevel
						option => 'gauge,0:U',
					},
				}, # snmp
			},
		},
	}, # systemHealth
	
);
