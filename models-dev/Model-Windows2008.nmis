#
## $Id: Model-Windows2008.nmis,v 8.5 2012/04/28 00:59:36 keiths Exp $
#
#  Copyright 1999-2011 Opmantek Limited (www.opmantek.com)
#  
#  ALL CODE MODIFICATIONS MUST BE SENT TO CODE@OPMANTEK.COM
#  
#  This file is part of Network Management Information System (“NMIS”).
#  
#  NMIS is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  NMIS is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with NMIS (most likely in a file named LICENSE).  
#  If not, see <http://www.gnu.org/licenses/>
#  
#  For further information on NMIS or for a license other than GPL please see
#  www.opmantek.com or email contact@opmantek.com 
#  
#  User group details:
#  http://support.opmantek.com/users/
#  
# *****************************************************************************

%hash = (
  '-common-' => {
    'class' => {
      'database' => {
        'common-model' => 'database'
      },
      'threshold' => {
        'common-model' => 'threshold'
      },
      'summary' => {
        'common-model' => 'summary'
      },
      'heading' => {
        'common-model' => 'heading'
      },
      'stats' => {
        'common-model' => 'stats'
      },
      'event' => {
        'common-model' => 'event'
      }
    }
  },
  'alerts' => {
    'services' => {
      'HighProcessMemoryUsage' => {
        'type' => 'test',
        'test' => 'CVAR1=hrSWRunPerfMem;$CVAR1 > 300000',
        'value' => 'CVAR1=hrSWRunPerfMem;$CVAR1 * 1',
        'unit' => 'bytes',
        'element' => 'hrSWRunName',
        'event' => 'High Process Memory Usage',
        'level' => 'Warning'
      }
    },
    'storage' => {
      'HighDiskUsage' => {
        'type' => 'threshold-rising',
        'threshold' => {
        	'Normal' => '70',
        	'Warning' => '75',
        	'Minor' => '80',
        	'Major' => '95',
        	'Critical' => '98',
        	'Fatal' => '99',
        },
        'test' => '',
        'value' => 'CVAR1=hrStorageSize;CVAR2=hrStorageUsed;$CVAR2 / $CVAR1 * 100',
        'element' => 'hrStorageDescr',
        'unit' => '%',
        'event' => 'High Disk Usage',
        'level' => 'Warning',
        'control' => 'CVAR=hrStorageType;$CVAR =~ /Fixed Disk/',
      },
      'HighMemoryUsage' => {
        'type' => 'threshold-rising',
        'threshold' => {
        	'Normal' => '94',
        	'Warning' => '0',
        	'Minor' => '94',
        	'Major' => '96',
        	'Critical' => '98',
        	'Fatal' => '100',
        },
        'test' => '',
        'value' => 'CVAR1=hrStorageSize;CVAR2=hrStorageUsed;$CVAR2 / $CVAR1 * 100',
        'element' => 'hrStorageDescr',
        'unit' => '%',
        'event' => 'High Memory Usage',
        'level' => 'Warning',
        'control' => 'CVAR=hrStorageType;$CVAR =~ /Memory/',
      }
    }
  },
  'system' => {
    'nodegraph' => 'health,response,ip,tcp-conn,tcp-segs,hrmem,hrvmem,hrsmpcpu,hrwinproc,hrwinusers',
    'nodeType' => 'server',
    'nodeModel' => 'Windows2008',
    'rrd' => {
      'hrwin' => {
        'graphtype' => 'hrwinproc,hrwinusers',
        'snmp' => {
          'hrNumUsers' => {
            'oid' => 'hrSystemNumUsers'
          },
          'hrProcesses' => {
            'oid' => 'hrSystemProcesses',
          },
          #'UserTime' => {
          #  'oid' => 'cpuPercentUserTime.1.48'
          #},
          #'AvailableBytes' => {
          #  'oid' => 'memoryAvailableBytes'
          #},
          #'CommittedBytes' => {
          #  'oid' => 'memoryCommittedBytes'
          #},
          #'PagesPerSec' => {
          #  'oid' => 'memoryPagesPerSec'
          #},
          #'ProcessorTime' => {
          #  'oid' => 'cpuPercentProcessorTime.1.48'
          #},
          #'InterruptsPerSec' => {
          #  'oid' => 'cpuInterruptsPerSec.1.48'
          #}
        },
      },
      'tcp' => {
        'graphtype' => 'tcp-conn,tcp-segs',
        'snmp' => {
          'tcpActiveOpens' => {
            'oid' => 'tcpActiveOpens',
            'option' => 'counter,0:U'
          },
          'tcpPassiveOpens' => {
            'oid' => 'tcpPassiveOpens',
            'option' => 'counter,0:U'
          },
          'tcpAttemptFails' => {
            'oid' => 'tcpAttemptFails',
            'option' => 'counter,0:U'
          },
          'tcpEstabResets' => {
            'oid' => 'tcpEstabResets',
            'option' => 'counter,0:U'
          },
          'tcpCurrEstab' => {
            'oid' => 'tcpCurrEstab',
            'option' => 'gauge,0:U'
          },
          'tcpInSegs' => {
            'oid' => 'tcpInSegs',
            'option' => 'counter,0:U'
          },
          'tcpOutSegs' => {
            'oid' => 'tcpOutSegs',
            'option' => 'counter,0:U'
          },
          'tcpRetransSegs' => {
            'oid' => 'tcpRetransSegs',
            'option' => 'counter,0:U'
          },
          'tcpInErrs' => {
            'oid' => 'tcpInErrs',
            'option' => 'counter,0:U'
          },
          'tcpOutRsts' => {
            'oid' => 'tcpOutRsts',
            'option' => 'counter,0:U'
          }
        },
      },
      'mib2ip' => {
        'graphtype' => 'ip,frag',
        'snmp' => {
          'ipFragFails' => {
            'oid' => 'ipFragFails',
            'option' => 'counter,0:U'
          },
          'ipInAddrErrors' => {
            'oid' => 'ipInAddrErrors',
            'option' => 'counter,0:U'
          },
          'ipOutRequests' => {
            'oid' => 'ipOutRequests',
            'option' => 'counter,0:U'
          },
          'ipFragCreates' => {
            'oid' => 'ipFragCreates',
            'option' => 'counter,0:U'
          },
          'ipInDiscards' => {
            'oid' => 'ipInDiscards',
            'option' => 'counter,0:U'
          },
          'ipInHdrErrors' => {
            'oid' => 'ipInHdrErrors',
            'option' => 'counter,0:U'
          },
          'ipInReceives' => {
            'oid' => 'ipInReceives',
            'option' => 'counter,0:U'
          },
          'ipFragOKs' => {
            'oid' => 'ipFragOKs',
            'option' => 'counter,0:U'
          },
          'ipForwDatagrams' => {
            'oid' => 'ipForwDatagrams',
            'option' => 'counter,0:U'
          },
          'ipOutDiscards' => {
            'oid' => 'ipOutDiscards',
            'option' => 'counter,0:U'
          },
          'ipInDelivers' => {
            'oid' => 'ipInDelivers',
            'option' => 'counter,0:U'
          },
          'ipReasmFails' => {
            'oid' => 'ipReasmFails',
            'option' => 'counter,0:U'
          },
          'ipReasmOKs' => {
            'oid' => 'ipReasmOKs',
            'option' => 'counter,0:U'
          },
          'ipReasmReqds' => {
            'oid' => 'ipReasmReqds',
            'option' => 'counter,0:U'
          },
          'ipInUnknownProtos' => {
            'oid' => 'ipInUnknownProtos',
            'option' => 'counter,0:U'
          }
        }
      }
    },
    'sys' => {
      'alerts' => {
        'snmp' => {
          'tcpCurrEstab' => {
            'oid' => 'tcpCurrEstab',
            'title' => 'TCP Established Sessions',
            'alert' => {
              'test' => '$r > 250',
              'event' => 'High TCP Connection Count',
							'unit' => 'connections',
              'level' => 'Warning'
            }
          }
        }
      },
      'standard' => {
        'snmp' => {
          'sysLocation' => {
            'replace' => {
              '' => 'default',
              'noSuchObject' => 'default'
            },
            'oid' => 'sysLocation',
            'title' => 'Location'
          },
          'sysObjectID' => {
            'oid' => 'sysObjectID'
          },
          'sysDescr' => {
            'oid' => 'sysDescr',
            'title' => 'Description'
          },
          'ifNumber' => {
            'oid' => 'ifNumber'
          },
          'sysUpTime' => {
            'oid' => 'sysUpTime',
            'title' => 'Uptime'
          },
          'sysName' => {
            'oid' => 'sysName',
            'title' => 'System Name'
          },
          'sysContact' => {
            'replace' => {
              '' => 'default',
              'noSuchObject' => 'default'
            },
            'oid' => 'sysContact',
            'title' => 'Contact'
          }
        }
      },
      'extra' => {
        'snmp' => {
          'hrNumUsers' => {
            'oid' => 'hrSystemNumUsers.0',
            'title' => 'Users'
          },
          'hrProcesses' => {
            'oid' => 'hrSystemProcesses.0',
            'title' => 'Processes'
          },
          'hrMemorySize' => {
            'oid' => 'hrMemorySize.0',
            'title' => 'Memory'
          },
        }
      }
    },
    'nodeVendor' => 'Microsoft'
  },
  'interface' => {
    'rrd' => {
      'interface' => {
        'snmp' => {
          'ifOperStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '4' => 'unknown',
              '1' => 'up',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifOperStatus',
            'option' => 'gauge,0:100'
          },
          'ifDescr' => {
            'oid' => 'ifDescr'
          },
          'ifInOctets' => {
            'oid' => 'ifInOctets',
            'option' => 'counter,0:$ifSpeed'
          },
          'ifOutOctets' => {
            'oid' => 'ifOutOctets',
            'option' => 'counter,0:$ifSpeed'
          },
          'ifAdminStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '4' => 'unknown',
              '1' => 'up',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifAdminStatus'
          }
        },
        'indexed' => 'true',
        'threshold' => 'util_in,util_out',
        'graphtype' => 'bits,abits,maxbits,util,autil'
      }
    },
    'sys' => {
      'standard' => {
        'indexed' => 'true',
        'snmp' => {
          'ifOperStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '4' => 'unknown',
              '1' => 'up',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifOperStatus',
            'title' => 'Oper Status'
          },
          'ifDescr' => {
            'oid' => 'ifDescr',
            'title' => 'Name'
          },
          'ifAdminStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '4' => 'unknown',
              '1' => 'up',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifAdminStatus',
            'title' => 'Admin Status'
          },
          'ifSpeed' => {
            'oid' => 'ifSpeed',
            'title' => 'Bandwidth'
          },
          'Description' => {
            'oid' => 'ifAlias',
            'title' => 'Description'
          },
          'ifLastChange' => {
            'oid' => 'ifLastChange',
            'title' => 'Last Change'
          },
          'ifType' => {
            'oid' => 'ifType',
            'title' => 'Type'
          }
        }
      }
    },
    'nocollect' => {
      'ifOperStatus' => 'other',
      'ifDescr' => 'loopback|QoS Packet Scheduler|WAN Miniport|LightWeight Filter|ISATAP|Teredo Tunneling|Apple Mobile Device Ethernet',
      'noDescription' => 'false',
      'Description' => '^#',
      'ifType' => 'softwareloopback|ppp'
    },
    'noevent' => {
      'Description' => '^!',
      'ifDescr' => 'null',
      'ifType' => 'other'
	  }
  },
  #'systemHealth' => {    
  #  'sections' => 'tcpConn,tcpConnection',
  #  'sys' => {
  #    'tcpConn' => {        
  #      'indexed' => 'tcpConnState',
  #      #'control' => 'CVAR=tcpConnState;$CVAR =~ /2/',
  #      'index_oid' => '1.3.6.1.2.1.6.13.1.1',        
  #      'index_regex' => '\.(\d+\.\d+\.\d+\.\d+\.\d+\.\d+\.\d+\.\d+\.\d+\.\d+)$',        
  #      'headers' => 'tcpConnState,tcpConnLocalAddress,tcpConnLocalPort,tcpConnRemAddress,tcpConnRemPort',
  #      'snmp' => {
  #        'tcpConnState' => {
  #          'replace' => {
  #            '1' => 'closed',
  #            '2' => 'listen',
  #            '3' => 'synSent',
  #            '4' => 'synReceived',
  #            '5' => 'established',
  #            '6' => 'finWait1',
  #            '7' => 'finWait2',
  #            '8' => 'closeWait',
  #            '9' => 'lastAck',
  #            '10' => 'closing',
  #            '11' => 'timeWait',
  #            '12' => 'deleteTCB',
  #          },
  #          'oid' => 'tcpConnState',
  #          'title' => 'TCP Connection State'
  #        },
  #        'tcpConnLocalAddress' => {
  #          'oid' => 'tcpConnLocalAddress',
  #          'title' => 'TCP Local Address'
  #        },
  #        'tcpConnLocalPort' => {
  #          'oid' => 'tcpConnLocalPort',
  #          'title' => 'TCP Local Port'
  #        },
  #        'tcpConnRemAddress' => {
  #          'oid' => 'tcpConnRemAddress',
  #          'title' => 'TCP Remote Address'
  #        },
  #        'tcpConnRemPort' => {
  #          'oid' => 'tcpConnRemPort',
  #          'title' => 'TCP Remote Port'
  #        },
  #      },
  #    },      
  #    'tcpConnection' => {        
  #      'indexed' => 'tcpConnectionState',        
  #      'index_oid' => '1.3.6.1.2.1.6.19.1.7',
  #      #ipv4."0.0.0.0".135.ipv4."0.0.0.0".0        
  #      'index_regex' => '\.(1\.4\.\d+\.\d+\.\d+\.\d+\.\d+\.1\.4\.\d+\.\d+\.\d+\.\d+\.\d+|2\.16\.[\.\d]+\.2\.16\.[\.\d]+)$',        
  #      'headers' => 'index,tcpConnectionState',
  #      #'control' => 'CVAR=tcpConnectionState;$CVAR =~ /2/',
  #      'snmp' => {
  #        'tcpConnectionState' => {
  #          'replace' => {
  #            '1' => 'closed',
  #            '2' => 'listen',
  #            '3' => 'synSent',
  #            '4' => 'synReceived',
  #            '5' => 'established',
  #            '6' => 'finWait1',
  #            '7' => 'finWait2',
  #            '8' => 'closeWait',
  #            '9' => 'lastAck',
  #            '10' => 'closing',
  #            '11' => 'timeWait',
  #            '12' => 'deleteTCB',
  #          },
  #          'oid' => '1.3.6.1.2.1.6.19.1.7',
  #          'title' => 'TCP Connection State'
  #        },
  #      },
  #    },      
  #  },
    #'rrd' => {
    #  'diskIOTable' => {
    #    'control' => 'CVAR=diskIODevice;$CVAR =~ /sda|sr|disk|xvda|dm\-/',
    #    'indexed' => 'true',
    #    'graphtype' => 'diskio-rw,diskio-rwbytes',
    #    'snmp' => {
    #      'diskIONReadX' => {
    #        'oid' => 'diskIONReadX',
    #        'option' => 'counter,0:U',
    #        'title' => 'The number of bytes read from this device since boot'
    #      },
    #      'diskIONWrittenX' => {
    #        'oid' => 'diskIONWrittenX',
    #        'option' => 'counter,0:U',
    #        'title' => 'The number of bytes written from this device since boot'
    #      },
    #      'diskIOReads' => {
    #        'oid' => 'diskIOReads',
    #        'option' => 'counter,0:U',
    #        'title' => 'The number of read accesses from this device since boot'
    #      },
    #      'diskIOWrites' => {
    #        'oid' => 'diskIOWrites',
    #        'option' => 'counter,0:U',
    #        'title' => 'The number of write accesses to this device since boot'
    #      },
    #    },
    #  },
    #}
  #},
  'storage' => {
    'sys' => {
      'storage' => {
        'snmp' => {
          'hrStorageUnits' => {
            'oid' => 'hrStorageAllocationUnits'
          },
          'hrStorageSize' => {
            'oid' => 'hrStorageSize'
          },
          'hrStorageUsed' => {
            'oid' => 'hrStorageUsed',
          },
          'hrStorageDescr' => {
            'oid' => 'hrStorageDescr'
          },
          'hrStorageType' => {
            'oid' => 'hrStorageType'
          }
        },
        'indexed' => 'true'
      },
    },
    'nocollect' => {
      'Description' => ''
    }
  },
  'device' => {
    'sys' => {
      'device' => {
        'snmp' => {
          'hrDeviceType' => {
            'oid' => 'hrDeviceType'
          },
          'hrDeviceDescr' => {
            'oid' => 'hrDeviceDescr'
          }
        },
        'indexed' => 'true'
      }
    }
  }
);
