#
#  Copyright 1999-2011 Opmantek Limited (www.opmantek.com)
#
#  ALL CODE MODIFICATIONS MUST BE SENT TO CODE@OPMANTEK.COM
#
#  This file is part of Network Management Information System (“NMIS”).
#
#  NMIS is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  NMIS is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with NMIS (most likely in a file named LICENSE).
#  If not, see <http://www.gnu.org/licenses/>
#
#  For further information on NMIS or for a license other than GPL please see
#  www.opmantek.com or email contact@opmantek.com
#
#  User group details:
#  http://support.opmantek.com/users/
#
# *****************************************************************************

%hash = (
  '-common-' => {
    'class' => {
      'database' => {
        'common-model' => 'database'
      },
      'event' => {
        'common-model' => 'event'
      },
      'heading' => {
        'common-model' => 'heading'
      },
      'stats' => {
        'common-model' => 'stats'
      },
      'threshold' => {
        'common-model' => 'threshold'
      },
      'asset' => {
        'common-model' => 'Cisco-asset'
      },
      'neighbor' => {
        'common-model' => 'Cisco-neighbor'
      },
      'routing' => {
        'common-model' => 'routing'
      },
      'status' => {
        'common-model' => 'Cisco-status'
      },
    }
  },
  'custom' => {
  	#https://community.opmantek.com/display/NMIS/Managing+Nodes+with+High+Interface+Counts
    'interface' => {
      'ifAdminStatus' => 'false', # default = true
      'ifNumber' => 'false', # default = true
      'ifLastChange' => 'false', # default = false
      'ifTableLastChange' => 'false', # default = false
      'skipIfComment' => 'This is used for mega devices to get rid of unwanted interfaces.  Big SP switches for example.  If skipIfType or skipIfDescr regex is matched, then just skip this interface all together. Must be used with ifNumber = false, ifAdminStatus = false, ifLastChange = false, ifTableLastChange = false',
      'skipIfType' => 'ppp',
			'skipIfDescr' => 'Virtual-Access|noSuchInstance'      
    }
  },
  'interface' => {
    'collect' => {
      'Description' => '(CNOC|Collection)'
    },
    'nocollect' => {
      'Description' => '^#',
      'ifDescr' => 'sublayer|null|controller',
      'ifOperStatus' => 'null',
      'ifType' => 'other|l2vlan|softwareloopback|propVirtual|slip|ppp',
      'noDescription' => 'false'
    },
    'noevent' => {
      'Description' => '^!|^0',
      'ifDescr' => 'null',
      'ifType' => 'other'
    },
    'rrd' => {
      'interface' => {
        'graphtype' => 'bits,abits,maxbits,util,autil',
        'indexed' => 'true',
        'snmp' => {
          'ifAdminStatus' => {
            'oid' => 'ifAdminStatus',
            'replace' => {
              '1' => 'up',
              '2' => 'down',
              '3' => 'testing',
              '4' => 'unknown',
              '5' => 'dormant',
              '6' => 'notPresent',
              '7' => 'lowerLayerDown'
            }
          },
          'ifDescr' => {
            'oid' => 'ifDescr'
          },
          'ifHCInOctets' => {
            'oid' => 'ifHCInOctets',
            'option' => 'counter,0:U'
          },
          'ifHCOutOctets' => {
            'oid' => 'ifHCOutOctets',
            'option' => 'counter,0:U'
          },
          'ifInOctets' => {
            'oid' => 'ifInOctets',
            'option' => 'counter,0:U'
          },
          'ifOperStatus' => {
            'oid' => 'ifOperStatus',
            'option' => 'gauge,0:100',
            'replace' => {
              '1' => 'up',
              '2' => 'down',
              '3' => 'testing',
              '4' => 'unknown',
              '5' => 'dormant',
              '6' => 'notPresent',
              '7' => 'lowerLayerDown'
            }
          },
          'ifOutOctets' => {
            'oid' => 'ifOutOctets',
            'option' => 'counter,0:U'
          }
        },
        'threshold' => 'util_in,util_out'
      },
      'pkts_hc' => {
        'indexed' => 'true',
        'threshold' => 'pkt_errors_in,pkt_errors_out',
        'graphtype' => 'pkts_hc,errpkts_hc',
        'snmp' => {
          'ifHCInBcastPkts' => {
            'oid' => 'ifHCInBroadcastPkts',
            'option' => 'counter,0:U'
          },
          'ifHCInMcastPkts' => {
            'oid' => 'ifHCInMulticastPkts',
            'option' => 'counter,0:U'
          },
          'ifHCInOctets' => {
            'oid' => 'ifHCInOctets',
            'option' => 'counter,0:U'
          },
          'ifHCInUcastPkts' => {
            'oid' => 'ifHCInUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifHCOutBcastPkts' => {
            'oid' => 'ifHCOutBroadcastPkts',
            'option' => 'counter,0:U'
          },
          'ifHCOutMcastPkts' => {
            'oid' => 'ifHCOutMulticastPkts',
            'option' => 'counter,0:U'
          },
          'ifHCOutOctets' => {
            'oid' => 'ifHCOutOctets',
            'option' => 'counter,0:U'
          },
          'ifHCOutUcastPkts' => {
            'oid' => 'ifHCOutUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifInBcastPkts' => {
            'oid' => 'ifInBroadcastPkts',
            'option' => 'counter,0:U'
          },
          'ifInDiscards' => {
            'oid' => 'ifInDiscards',
            'option' => 'counter,0:U'
          },
          'ifInErrors' => {
            'oid' => 'ifInErrors',
            'option' => 'counter,0:U'
          },
          'ifInMcastPkts' => {
            'oid' => 'ifInMulticastPkts',
            'option' => 'counter,0:U'
          },
          'ifInOctets' => {
            'oid' => 'ifInOctets',
            'option' => 'counter,0:U'
          },
          'ifInUcastPkts' => {
            'oid' => 'ifInUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifOutBcastPkts' => {
            'oid' => 'ifOutBroadcastPkts',
            'option' => 'counter,0:U'
          },
          'ifOutDiscards' => {
            'oid' => 'ifOutDiscards',
            'option' => 'counter,0:U'
          },
          'ifOutErrors' => {
            'oid' => 'ifOutErrors',
            'option' => 'counter,0:U'
          },
          'ifOutMcastPkts' => {
            'oid' => 'ifOutMulticastPkts',
            'option' => 'counter,0:U'
          },
          'ifOutOctets' => {
            'oid' => 'ifOutOctets',
            'option' => 'counter,0:U'
          },
          'ifOutUcastPkts' => {
            'oid' => 'ifOutUcastPkts',
            'option' => 'counter,0:U'
          }
        }
      }
    },
    'sys' => {
      'extra' => {
        'indexed' => 'true',
        'snmp' => {
          'Description' => {
            'oid' => 'ifAlias',
            'title' => ' Description'
          },
          'ifHighSpeed' => {
            'oid' => 'ifHighSpeed'
          }
        }
      },
      'standard' => {
      	'headers' => 'ifIndex,ifDescr,Description,ifAdminStatus,ifOperStatus,ifType,ifPhysAddress,ifSpeed,ifHighSpeed,ifLastChange,collect,nocollect',
        'indexed' => 'true',
        'snmp' => {
          'ifAdminStatus' => {
            'oid' => 'ifAdminStatus',
            'replace' => {
              '1' => 'up',
              '2' => 'down',
              '3' => 'testing',
              '4' => 'unknown',
              '5' => 'dormant',
              '6' => 'notPresent',
              '7' => 'lowerLayerDown'
            },
            'title' => ' Admin Status'
          },
          'ifDescr' => {
            'oid' => 'ifDescr',
            'title' => ' Name'
          },
					'ifPhysAddress' => {
            'oid' => 'ifPhysAddress',
            'title' => 'Physical Address',
          },

          'ifLastChange' => {
            'oid' => 'ifLastChange',
            'title' => ' Last Change'
          },
          'ifOperStatus' => {
            'oid' => 'ifOperStatus',
            'replace' => {
              '1' => 'up',
              '2' => 'down',
              '3' => 'testing',
              '4' => 'unknown',
              '5' => 'dormant',
              '6' => 'notPresent',
              '7' => 'lowerLayerDown'
            },
            'title' => ' Oper Status'
          },
          'ifSpeed' => {
            'oid' => 'ifSpeed',
            'title' => ' Bandwidth'
          },
          'ifType' => {
            'oid' => 'ifType',
            'title' => ' Type'
          }
        }
      }
    }
  },
  'stats' => {
    'type' => {
      'nodehealth' => [
        'DEF:avgBusy1=$database:avgBusy1:AVERAGE',
        'DEF:avgBusy5=$database:avgBusy5:AVERAGE',
        'DEF:MemPUsed=$database:MemoryUsedPROC:AVERAGE',
        'DEF:MemPFree=$database:MemoryFreePROC:AVERAGE',
        'CDEF:totalPMem=MemPUsed,MemPFree,+',
        'CDEF:perPUsedMem=MemPUsed,totalPMem,/,100,*',
        'CDEF:perPFreeMem=MemPFree,totalPMem,/,100,*',
        'PRINT:avgBusy1:AVERAGE:avgBusy1min=%1.2lf',
        'PRINT:avgBusy5:AVERAGE:avgBusy5min=%1.2lf',
        'PRINT:perPUsedMem:AVERAGE:ProcMemUsed=%1.2lf',
        'PRINT:perPFreeMem:AVERAGE:ProcMemFree=%1.2lf'
      ]
    }
  },
  'summary' => {
    'statstype' => {
      'health' => {
        'sumname' => {
          'available' => {
            'stsname' => [
              'available'
            ]
          },
          'reachable' => {
            'stsname' => [
              'reachable'
            ]
          },
          'response' => {
            'stsname' => [
              'response'
            ]
          }
        }
      },
      'nodehealth' => {
        'sumname' => {
          'cpu' => {
            'stsname' => [
              'avgBusy5min'
            ]
          },
          'memory' => {
            'stsname' => [
              'ProcMemUsed'
            ]
          }
        }
      }
    }
  },
  'systemHealth' => {
    'sections' => 'cempMemPool,cempMemBuffer,cdp,entityMib,ciscoAsset,addressTable,bgpPeer,ospfNbr,fanStatus,psuStatus,tempStatus',
    'rrd' => {
      'cempMemPool' => {
        'comment' => 'Cisco 10000 do not use the HC counters so this can not use the common-model',
        'indexed' => 'true',
        'graphtype' => 'memoryPool',
        'threshold' => 'memPoolUtil',
        'snmp' => {
          'MemPoolUsed' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.1.1.7',
            'sysObjectName' => 'cempMemPoolUsed',
          },
          'MemPoolFree' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.1.1.8',
            'sysObjectName' => 'cempMemPoolFree',
          },
        },
      },
      'cempMemBuffer' => {
        'indexed' => 'true',
        'graphtype' => 'memoryBuffer',
        'threshold' => 'bufferUtil,bufferMissPct',
        'snmp' => {
          'BufferTotal' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.2.1.10',
            'sysObjectName' => 'cempMemBufferTotal',
          },
          'BufferFree' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.2.1.11',
            'sysObjectName' => 'cempMemBufferFree',
          },
          'BufferHit' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.2.1.12',
            'sysObjectName' => 'cempMemBufferHit',
            'option' => 'counter,0:U',
          },
          'BufferMiss' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.2.1.13',
            'sysObjectName' => 'cempMemBufferMiss',
            'option' => 'counter,0:U',
          },
        },
      },
    },
    'sys' => {
      'cempMemPool' => {
        'index_oid' => '1.3.6.1.4.1.9.9.221.1.1.1.1.3',
        'index_regex' => '\\.(\\d+\.\\d+)$',
        'indexed' => 'MemPoolName',        
        'headers' => 'entPhysicalDescr,MemPoolName,MemPoolUsed,MemPoolFree',
        'snmp' => {
          'entPhysicalDescr' => {
            'title' => 'Physical Descr'
          },
          'MemPoolName' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.1.1.3',
            'sysObjectName' => 'cempMemPoolName',
            'title' => 'Memory Pool Name'
          },
          'MemPoolUsed' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.1.1.7',
            'sysObjectName' => 'cempMemPoolUsed',
            'title' => 'Memory Pool Used'
          },
          'MemPoolFree' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.1.1.8',
            'sysObjectName' => 'cempMemPoolFree',
            'title' => 'Memory Pool Free'
          },
        },
      },
# http://www.cisco.com/c/en/us/td/docs/wireless/asr_901/mib/reference/asr_mib.pdf
# Contains entries in this table define entities (buffer pools in this case) which are contained in an entity (memory pool)
# defined by an entry from cempMemPoolTable. 
# -- Basic Pool Architecture -- 
# 
# 1)Pools are classified as being either Static or Dynamic. Static pools make no attempt to increase
# the number of buffers contained within them if the number of free buffers (cempMemBufferFree) are less than the
# number of minimum buffers (cempMemBufferMin). With Dynamic pools, the pool attempts to meet the demands of
# its users. 
# 
# 2)Buffers in a pool are classified as being either Permanent or Temporary. Permanent buffers, as their name
# suggests, are always in the pool and are never destroyed unless the number of permanent buffers
# (cempMemBufferPermanent) is changed. Temporary buffers are transient buffers that are created in dynamic
# pools whenever the free count (cempMemBufferFree) of buffers in the pool drops below the minimum (cempMemBufferMin). 
# 
# 3)Buffers pools are classified as either Public or Private. Public pools are available for all
# users to allocate buffers from. Private pools are primarily used by interface drivers.
      'cempMemBuffer' => {
        'index_oid' => '1.3.6.1.4.1.9.9.221.1.1.2.1.3',
        'index_regex' => '\\.(\\d+\.\\d+)$',
        'indexed' => 'BufferName',        
        'headers' => 'BufferName,BufferTotal,BufferFree',
        'snmp' => {
          'BufferName' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.2.1.3',
            'sysObjectName' => 'cempMemBufferName',
            'title' => 'Buffer Name'
          },
          'BufferTotal' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.2.1.10',
            'sysObjectName' => 'cempMemBufferTotal',
            'title' => 'Buffer Total'
          },
          'BufferFree' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.2.1.11',
            'sysObjectName' => 'cempMemBufferFree',
            'title' => 'Buffer Free'
          },
          'BufferHit' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.2.1.12',
            'sysObjectName' => 'cempMemBufferHit',
            'title' => 'Buffer Hit'
          },
          'BufferMiss' => {
            'oid' => '1.3.6.1.4.1.9.9.221.1.1.2.1.13',
            'sysObjectName' => 'cempMemBufferMiss',
            'title' => 'Buffer Miss'
          },
        },
      },
    }  
  },
  'system' => {
    'nodeModel' => 'Cisco10000',
    'nodeType' => 'router',
    'nodeVendor' => 'Cisco Systems',
    'nodegraph' => 'health,response,cpu,ip,mem-proc,routenumber',
    'rrd' => {
      'nodehealth' => {
        'graphtype' => 'cpu,mem-proc,routenumber',
        'snmp' => {
          'MemoryFreePROC' => {
            'oid' => 'ciscoMemoryPoolFree.1'
          },
          'MemoryUsedPROC' => {
            'oid' => 'ciscoMemoryPoolUsed.1'
          },
          'RouteNumber' => {
            'oid' => 'ipCidrRouteNumber'
          },
          'avgBusy1' => {
            'oid' => 'cpmCPUTotal1minRev.1'
          },
          'avgBusy5' => {
            'oid' => 'cpmCPUTotal5minRev.1'
          }
        },
        'threshold' => 'cpu'
      },
      'mib2ip' => {
        'snmp' => {
          'ipInAddrErrors' => {
            'oid' => 'ipInAddrErrors',
            'option' => 'counter,0:U'
          },
          'ipFragCreates' => {
            'oid' => 'ipFragCreates',
            'option' => 'counter,0:U'
          },
          'ipInDiscards' => {
            'oid' => 'ipInDiscards',
            'option' => 'counter,0:U'
          },
          'ipInReceives' => {
            'oid' => 'ipInReceives',
            'option' => 'counter,0:U'
          },
          'ipFragOKs' => {
            'oid' => 'ipFragOKs',
            'option' => 'counter,0:U'
          },
          'ipInDelivers' => {
            'oid' => 'ipInDelivers',
            'option' => 'counter,0:U'
          },
          'ipReasmFails' => {
            'oid' => 'ipReasmFails',
            'option' => 'counter,0:U'
          },
          'ipReasmReqds' => {
            'oid' => 'ipReasmReqds',
            'option' => 'counter,0:U'
          },
          'ipFragFails' => {
            'oid' => 'ipFragFails',
            'option' => 'counter,0:U'
          },
          'ipOutRequests' => {
            'oid' => 'ipOutRequests',
            'option' => 'counter,0:U'
          },
          'ipOutNoRoutes' => {
            'oid' => 'ipOutNoRoutes'
          },
          'ipInHdrErrors' => {
            'oid' => 'ipInHdrErrors',
            'option' => 'counter,0:U'
          },
          'ipForwDatagrams' => {
            'oid' => 'ipForwDatagrams',
            'option' => 'counter,0:U'
          },
          'ipOutDiscards' => {
            'oid' => 'ipOutDiscards',
            'option' => 'counter,0:U'
          },
          'ipReasmOKs' => {
            'oid' => 'ipReasmOKs',
            'option' => 'counter,0:U'
          },
          'ipInUnknownProtos' => {
            'oid' => 'ipInUnknownProtos',
            'option' => 'counter,0:U'
          }
        },
        'graphtype' => 'ip,frag'
      }
    },
    'sys' => {
      'nodeConfiguration' => {
        'snmp' => {
          'bootConfigLastChanged' => {
            'oid' => '1.3.6.1.4.1.9.9.43.1.1.3.0',
            'snmpObject' => 'ccmHistoryStartupLastChanged',
            'title' => 'Boot Configuration Last Changed'
          },
          'configLastChanged' => {
            'oid' => '1.3.6.1.4.1.9.9.43.1.1.1.0',
            'snmpObject' => 'ccmHistoryRunningLastChanged',
            'title' => 'Configuration Last Changed'
          },
          'configLastSaved' => {
            'oid' => '1.3.6.1.4.1.9.9.43.1.1.2.0',
            'snmpObject' => 'ccmHistoryRunningLastSaved',
            'title' => 'Configuration Last Viewed'
          }
        }
      },
			'extra' => {
				'snmp' => {
					'softwareImage' => {
            'calculate' => '$r =~ /CW_IMAGE\\$(.+)\\$/; $r = $1',
            'oid' => '1.3.6.1.4.1.9.9.25.1.1.1.2.2',
            'snmpObjectName' => 'ciscoImageString',
            'title' => 'Software Image',
          },
					'softwareVersion' => {
						'calculate' => '$r =~ /CW_VERSION\\$(.+)\\$/; $r = $1',
						'oid' => '1.3.6.1.4.1.9.9.25.1.1.1.2.5',
            'snmpObjectName' => 'ciscoVersionString',
            'title' => 'Software Version',
          },
				},
			},
      'standard' => {
        'snmp' => {
          'ifNumber' => {
            'oid' => 'ifNumber',
            'title' => 'Interfaces'
          },
          'sysContact' => {
            'oid' => 'sysContact',
            'replace' => {
              '' => 'default'
            },
            'title' => 'Contact'
          },
          'sysDescr' => {
            'oid' => 'sysDescr',
            'title' => 'Description'
          },
          'sysLocation' => {
            'oid' => 'sysLocation',
            'replace' => {
              '' => 'default'
            },
            'title' => 'Location'
          },
          'sysName' => {
            'oid' => 'sysName'
          },
          'sysObjectID' => {
            'oid' => 'sysObjectID'
          },
          'sysUpTime' => {
            'calculate' => '$r * 100',
            'oid' => 'snmpEngineTime',
            'title' => 'Uptime'
          }
        }
      }
    }
  }
);
