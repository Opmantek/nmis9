#  Copyright 1999-2014 Opmantek Limited (www.opmantek.com)
#  
#  ALL CODE MODIFICATIONS MUST BE SENT TO CODE@OPMANTEK.COM
#  
#  This file is part of Network Management Information System (“NMIS”).
#  
#  NMIS is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  NMIS is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with NMIS (most likely in a file named LICENSE).  
#  If not, see <http://www.gnu.org/licenses/>
#  
#  For further information on NMIS or for a license other than GPL please see
#  www.opmantek.com or email contact@opmantek.com 
#  
#  User group details:
#  http://support.opmantek.com/users/
#  
# *****************************************************************************

%hash = (
  '-common-' => {
    'class' => {
      'database' => {
        'common-model' => 'database'
      },
      'threshold' => {
        'common-model' => 'threshold'
      },
      'summary' => {
        'common-model' => 'summary'
      },
      'heading' => {
        'common-model' => 'heading'
      },
      'stats' => {
        'common-model' => 'stats'
      },
      'event' => {
        'common-model' => 'event'
      }
    }
  },
  'system' => {
    'nodegraph' => 'health,response,ip',
    'nodeModel' => 'RadOptimux',
    'nodeType' => 'generic',
    'sys' => {
      'standard' => {
        'snmp' => {
          'sysLocation' => {
            'replace' => {
              '' => 'default'
            },
            'oid' => 'sysLocation',
            'title' => 'Location'
          },
          'sysDescr' => {
            'oid' => 'sysDescr',
            'title' => 'Description'
          },
          'sysObjectID' => {
            'oid' => 'sysObjectID'
          },
          'sysUpTime' => {
            'oid' => 'sysUpTime',
            'title' => 'Uptime'
          },
          'ifNumber' => {
            'oid' => 'ifNumber',
            'title' => 'Interfaces'
          },
          'sysContact' => {
            'replace' => {
              '' => 'default'
            },
            'oid' => 'sysContact',
            'title' => 'Contact'
          },
          'sysName' => {
            'oid' => 'sysName'
          }
        }
      }
    },
    'rrd' => {
      'mib2ip' => {
        'snmp' => {
          'ipInAddrErrors' => {
            'oid' => 'ipInAddrErrors',
            'option' => 'counter,0:U'
          },
          'ipFragCreates' => {
            'oid' => 'ipFragCreates',
            'option' => 'counter,0:U'
          },
          'ipInDiscards' => {
            'oid' => 'ipInDiscards',
            'option' => 'counter,0:U'
          },
          'ipInReceives' => {
            'oid' => 'ipInReceives',
            'option' => 'counter,0:U'
          },
          'ipFragOKs' => {
            'oid' => 'ipFragOKs',
            'option' => 'counter,0:U'
          },
          'ipInDelivers' => {
            'oid' => 'ipInDelivers',
            'option' => 'counter,0:U'
          },
          'ipReasmFails' => {
            'oid' => 'ipReasmFails',
            'option' => 'counter,0:U'
          },
          'ipReasmReqds' => {
            'oid' => 'ipReasmReqds',
            'option' => 'counter,0:U'
          },
          'ipFragFails' => {
            'oid' => 'ipFragFails',
            'option' => 'counter,0:U'
          },
          'ipOutRequests' => {
            'oid' => 'ipOutRequests',
            'option' => 'counter,0:U'
          },
          'ipOutNoRoutes' => {
            'oid' => 'ipOutNoRoutes'
          },
          'ipInHdrErrors' => {
            'oid' => 'ipInHdrErrors',
            'option' => 'counter,0:U'
          },
          'ipForwDatagrams' => {
            'oid' => 'ipForwDatagrams',
            'option' => 'counter,0:U'
          },
          'ipOutDiscards' => {
            'oid' => 'ipOutDiscards',
            'option' => 'counter,0:U'
          },
          'ipReasmOKs' => {
            'oid' => 'ipReasmOKs',
            'option' => 'counter,0:U'
          },
          'ipInUnknownProtos' => {
            'oid' => 'ipInUnknownProtos',
            'option' => 'counter,0:U'
          }
        },
        'graphtype' => 'ip,frag'
      }
    }
  },
  'interface' => {
    'sys' => {
      'standard' => {
        'indexed' => 'true',
        'snmp' => {
          'ifOperStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifOperStatus',
            'title' => 'Oper Status'
          },
          'ifDescr' => {
            'oid' => 'ifDescr',
            'title' => 'Name (ifDescr)'
          },
					'ifPhysAddress' => {
            'oid' => 'ifPhysAddress',
            'title' => 'Physical Address',
          },

          'ifSpeed' => {
            'oid' => 'ifSpeed',
            'title' => 'Bandwidth'
          },
          'ifAdminStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifAdminStatus',
            'title' => 'Admin Status'
          },
          'ifType' => {
            'oid' => 'ifType',
            'title' => 'Type (ifType)'
          },
          'ifLastChange' => {
            'oid' => 'ifLastChange',
            'title' => 'Last Change'
          }
        }
      },
      'extra' => {
        'indexed' => 'true',
        'snmp' => {
          'Description' => {
            'oid' => 'ifAlias',
            'title' => 'Description (ifAlias)'
          }
        }
      }
    },
    'rrd' => {
      'interface' => {
        'indexed' => 'true',
        'snmp' => {
          'ifOperStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifOperStatus',
            'option' => 'gauge,0:100'
          },
          'ifDescr' => {
            'oid' => 'ifDescr'
          },
          'ifInOctets' => {
            'oid' => 'ifInOctets',
            'option' => 'counter,0:U'
          },
          'ifHCOutOctets' => {
            'oid' => 'ifHCOutOctets',
            'option' => 'counter,0:U'
          },
          'ifAdminStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifAdminStatus'
          },
          'ifOutOctets' => {
            'oid' => 'ifOutOctets',
            'option' => 'counter,0:U'
          },
          'ifHCInOctets' => {
            'oid' => 'ifHCInOctets',
            'option' => 'counter,0:U'
          }
        },
        'threshold' => 'util_in,util_out',
        'graphtype' => 'bits,abits,maxbits,util,autil'
      },
      'pkts' => {
        'indexed' => 'true',
        'snmp' => {
          'ifHCOutUcastPkts' => {
            'oid' => 'ifHCOutUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifInUcastPkts' => {
            'oid' => 'ifInUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifInDiscards' => {
            'oid' => 'ifInDiscards',
            'option' => 'counter,0:U'
          },
          'ifHCInUcastPkts' => {
            'oid' => 'ifHCInUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifOutErrors' => {
            'oid' => 'ifOutErrors',
            'option' => 'counter,0:U'
          },
          'ifInNUcastPkts' => {
            'oid' => 'ifInNUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifOutDiscards' => {
            'oid' => 'ifOutDiscards',
            'option' => 'counter,0:U'
          },
          'ifInErrors' => {
            'oid' => 'ifInErrors',
            'option' => 'counter,0:U'
          },
          'ifOutNUcastPkts' => {
            'oid' => 'ifOutNUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifOutUcastPkts' => {
            'oid' => 'ifOutUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifInOctets' => {
            'oid' => 'ifInOctets',
            'option' => 'counter,0:U'
          },
          'ifOutOctets' => {
            'oid' => 'ifOutOctets',
            'option' => 'counter,0:U'
          },
        },
        'graphtype' => 'pkts,errpkts'
      }
    },
    'collect' => {
      'Description' => '(CNOC|Collection)',
    },
    'nocollect' => {
      'ifOperStatus' => 'other',
      'ifDescr' => 'sublayer|null|controller|^e0|^e1|^t0|^t1|^t3|async|bri[0-9]$|virtual|Bearer Channel|virtual-access',
      'Description' => '^#',
      'noDescription' => 'true',
      'ifType' => 'lapd|ds0|ds1|other|softwareloopback|isdn'
    },
    'noevent' => {
      'Description' => '^!',
      'ifDescr' => 'null',
      'ifType' => 'other'
	}
  },
		
		'systemHealth' => 
		{
				'sections' => 'SONETErrors,ds3Errors',
				'sys' => 
				{
						'SONETErrors' => 
						{
								# fixme: that would pull in all if's, which seems wrong - regardless of 
								# the mib claiming this is indexed by ifIfindex
								# on the other hand, the dump shows two sonet if's at 51 and 52 but 
								# the error stats exist only for 52 and 62 (based on SONET-MIB::sonetSectionCurrentStatus)
								#						'indexed' => 'ifIndex', 
								#						'index_oid' => '1.3.6.1.2.1.2.2.1.1',
								'indexed' => 'sonetSectionCurrentStatus',
								'index_oid' => '1.3.6.1.2.1.10.39.1.2.1.1.1',
								
								'headers' => 'sonetintf,sonetsectionstatus',
								'snmp' => 
								{
										'sonetintf' => {
												'oid' => '1.3.6.1.2.1.2.2.1.2', # ifDescr
												'title' => 'SONET Interface',
										},
										'sonetsectionstatus' => {
												'oid' => '1.3.6.1.2.1.10.39.1.2.1.1.1', # sonetSectionCurrentStatus
												'title' => "SONET Section Status",
												'calculate' => 'my @x; push @x,"Loss Of Framing" if ($r & 4); push @x,"Loss Of Signal" if ($r&2); push @x,"No Defect" if ($r&1); return join(", ",@x);',
										},
										'sectionElapsed' => {
												"oid" => '1.3.6.1.2.1.10.39.1.1.1.1.2',
												"title" => "elapsed seconds into current measurement interval",
										},
										'sectionES' => {
												'oid' => '1.3.6.1.2.1.10.39.1.2.1.1.2', # sonetSectionCurrentESs
												'title' => 'Errored Seconds',
												'calculate' => 'CVAR1=sectionElapsed; return ($CVAR1? $r/$CVAR1 : 0);',
										},
										'sectionSES' => {
												'oid' => '1.3.6.1.2.1.10.39.1.2.1.1.3', # sonetSectionCurrentSESs
												'title' => 'Severly Errored Seconds',
												'calculate' => 'CVAR1=sectionElapsed; return ($CVAR1? $r/$CVAR1 : 0);',
										},
										'sectionSEFS' => {
												'oid' => '1.3.6.1.2.1.10.39.1.2.1.1.4', # sonetSectionCurrentSEFSs
												'title' => 'Severly Errored Framing Seconds',
												'calculate' => 'CVAR1=sectionElapsed; return ($CVAR1? $r/$CVAR1 : 0);',
										},
										'sectionCV' => {
												'oid' => '1.3.6.1.2.1.10.39.1.2.1.1.5', # sonetSectionCurrentCVs'
												'title' => 'Coding Violations',
												'calculate' => 'CVAR1=sectionElapsed; return ($CVAR1? $r/$CVAR1 : 0);',
										},
								},
						},
						
						'ds3Errors' => 
						{        
								'indexed' => 'dsx3CurrentIndex',        
								'index_oid' => '1.3.6.1.2.1.10.30.6.1.1', 
								'headers' => 'ds3intf,ds3linestatus',
								'snmp' => {
										'ds3intf' => {
												'oid' => '1.3.6.1.2.1.2.2.1.2', # ifDescr
												'title' => 'DS3 Interface',
										},
										'ds3linestatus' => {
												'oid' => '1.3.6.1.2.1.10.30.5.1.10', # dsx3LineStatus
												'title' => "DS3 Line Status",
												'calculate' => 'my @x; my %triggers=(1,"No Alarm",2,"Rx Remote Alarm",4,"Tx Remote Alarm",8,"Rx AIS",16,"Tx AIS",32,"Rx LOF",64,"Rx LOS",128,"Loopback",256,"Test Pattern",512,"Unknown",1024,"Near end unavailable signal",2048,"Carrier Equip OOS"); while (my ($num,$txt)=each(%triggers)) { push (@x,$txt) if (int($r) & int($num)); }; return join(", ",@x); ',
										},

										'ds3Elapsed' => {
												'oid' => '1.3.6.1.2.1.10.30.5.1.3', # dsx3TimeElapsed
												'title' => 'elapsed seconds in current measurement interval',
										},
										'ds3UAS' => {
												'oid' => '1.3.6.1.2.1.10.30.6.1.5', # dsx3CurrentUASs
												'title' => 'Unavailable Seconds',
												'calculate' => 'CVAR1=ds3Elapsed; return ($CVAR1? $r/$CVAR1 : 0);',
										},
										'ds3LCV' => {
												'oid' => '1.3.6.1.2.1.10.30.6.1.6', # dsx3CurrentLCVs
												'title' => 'Line Coding Violations',
												'calculate' => 'CVAR1=ds3Elapsed; return ($CVAR1? $r/$CVAR1 : 0);',
										},
										'ds3SES' => {
												'oid' => '1.3.6.1.4.1.164.3.1.6.3.1.2.1.10', # RAD-MIB::prtDs3CurrentSES
												'title' => 'Severly Errored Seconds',
												'calculate' => 'CVAR1=ds3Elapsed; return ($CVAR1? $r/$CVAR1 : 0);',
										},
								},
						},      
				},	# sys
				
				'rrd' => {
						'ds3Errors' => {
								'indexed' => 'true',
								"graphtype" => "ds3Errors",
								"snmp" => {

										'ds3Elapsed' => {
												'oid' => '1.3.6.1.2.1.10.30.5.1.3', # dsx3TimeElapsed
												'title' => 'elapsed seconds in current measurement interval',
												'option' => 'gauge,0:U',
										},

										"ds3SES" => {
												'oid' => '1.3.6.1.4.1.164.3.1.6.3.1.2.1.10',
												'option' => 'gauge,0:U',
												'title' => "Severly Errored Seconds",
												'calculate' => 'CVAR1=ds3Elapsed; return ($CVAR1? $r/$CVAR1 : 0);',
										},
										"ds3LCV" => {
												'oid' => '1.3.6.1.2.1.10.30.6.1.6',
												'option' => 'gauge,0:U',
												'title' => "Line Coding Violations",
												'calculate' => 'CVAR1=ds3Elapsed; return ($CVAR1? $r/$CVAR1 : 0);',
										},
										"ds3UAS" => {
												'oid' => '1.3.6.1.2.1.10.30.6.1.5',
												'option' => 'gauge,0:U',
												'title' => "Unavailable Seconds",
												'calculate' => 'CVAR1=ds3Elapsed; return ($CVAR1? $r/$CVAR1 : 0);',
										}

								},
						},
										
						'SONETErrors' => {
								# ignore the 'phantom' interface with index 62
								'control' => 'CVAR=sonetintf; $CVAR ne "noSuchInstance"',
								'indexed' => 'true',
								'graphtype' => 'SONETErrors',
								"snmp" => {

										'sectionElapsed' => {
												"oid" => '1.3.6.1.2.1.10.39.1.1.1.1.2',
												"title" => "elapsed seconds into current measurement interval",
												"option" => "gauge,0:U",
										},

										'sectionES' => {
												'oid' => '1.3.6.1.2.1.10.39.1.2.1.1.2', # sonetSectionCurrentESs
												'option' => "gauge,0:U",
												'calculate' => 'CVAR1=sectionElapsed; return ($CVAR1? $r/$CVAR1 : 0);',
												'title' => 'Errored Seconds',
										},
										'sectionSES' => {
												'oid' => '1.3.6.1.2.1.10.39.1.2.1.1.3', # sonetSectionCurrentSESs
												'option' => "gauge,0:U",
												'calculate' => 'CVAR1=sectionElapsed; return ($CVAR1? $r/$CVAR1 : 0);',
												'title' => 'Severly Errored Seconds',
										},
										'sectionSEFS' => {
												'oid' => '1.3.6.1.2.1.10.39.1.2.1.1.4', # sonetSectionCurrentSEFSs
												'option' => "gauge,0:U",
												'calculate' => 'CVAR1=sectionElapsed; return ($CVAR1? $r/$CVAR1 : 0);',
												'title' => 'Severly Errored Framing Seconds',
										},
										'sectionCV' => {
												'oid' => '1.3.6.1.2.1.10.39.1.2.1.1.5', # sonetSectionCurrentCVs'
												'option' => "gauge,0:U",
												'calculate' => 'CVAR1=sectionElapsed; return ($CVAR1? $r/$CVAR1 : 0);',
												'title' => 'Coding Violations',
										},
								},
						},
				}, 	# rrd
				
				
		},	# systemhealth 

);
