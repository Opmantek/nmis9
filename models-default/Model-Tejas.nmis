#
## $Id: Model-net-snmp.nmis,v 8.4 2012/08/14 12:20:36 keiths Exp $
#
#  Copyright 1999-2011 Opmantek Limited (www.opmantek.com)
#
#  ALL CODE MODIFICATIONS MUST BE SENT TO CODE@OPMANTEK.COM
#
#  This file is part of Network Management Information System (NMIS).
#
#  NMIS is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  NMIS is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with NMIS (most likely in a file named LICENSE).
#  If not, see <http://www.gnu.org/licenses/>
#
#  For further information on NMIS or for a license other than GPL please see
#  www.opmantek.com or email contact@opmantek.com
#
#  User group details:
#  http://support.opmantek.com/users/
#
# *****************************************************************************

%hash = (
	'-common-' => {
		'class' => {
			'database' => {
				'common-model' => 'database'
			},
			'summary' => {
				'common-model' => 'summary'
			},
			'threshold' => {
				'common-model' => 'threshold'
			},
			'stats' => {
				'common-model' => 'stats'
			},
			'event' => {
				'common-model' => 'event'
			}
		}
	},
	'stats' => {
		'type' => {
		},
	},
	'system' => {
		'nodeModel' => 'Tejas',
		'nodeVendor' => 'Tejas',
		'nodeType' => 'router',
		'nodegraph' => 'health,cards,response,ip,tcp-conn,tcp-segs',
		'sys' => {
			'standard' => {
				'snmp' => {
					'sysLocation' => {
						'replace' => {
							'' => 'default',
						},
						'oid' => 'sysLocation',
						'title' => 'Location',
					},
					'sysDescr' => {
						'oid' => 'sysDescr',
						'title' => 'Description',
					},
					'sysObjectID' => {
						'oid' => 'sysObjectID',
					},
					'ifNumber' => {
						'oid' => 'ifNumber',
						'title' => 'Interfaces',
					},
					'sysContact' => {
						'replace' => {
							'' => 'default',
						},
						'oid' => 'sysContact',
						'title' => 'Contact',
					},
					'sysName' => {
						'oid' => 'sysName',
					},
					# SRC IMPORTANT - sysUptime is the number of clock ticks that snapped
					#			  has been running for, not the uptime of the box.  hrSystemUpTime
					#			  is the same as 'uptime' on the bash command line.
					#'sysUpTime' => {
					#	'oid' => 'hrSystemUptime',
					#	'title' => 'Uptime',
					#},
					'snmpUpTime' => {
						'oid' => 'sysUpTime',
						'title' => 'SNMP_Uptime',
					},
					'hrSystemDateSec' => {
						'oid' => 'hrSystemDate',
						# have: the 0xhexstring equivalent of local 2016-9-9,5:53:28.0,+10:0
						# we want fractional seconds in gmt.
						'calculate' => 'return NMISNG::Util::parse_dateandtime($r);',
					},
					'clockDelta' => {
						'oid' => 'hrSystemDate',
						'calculate' => 'my $delta = Time::HiRes::time - NMISNG::Util::parse_dateandtime($r); return ($delta > 0)? $delta: -$delta;',
					},
				}
			},
			'alerts' => {
				'snmp' => {
					'tcpCurrEstab' => {
						'oid' => 'tcpCurrEstab',
						'title' => 'TCP Established Sessions',
						'alert' => {
							'test' => '$r > 150',
							'event' => 'High TCP Connection Count',
							'unit' => 'connections',
							'level' => 'Warning'
						}
					}
				}
			},
		},
		'rrd' => {
			'tcp' => {
				'graphtype' => 'tcp-conn,tcp-segs',
				'snmp' => {
					'tcpActiveOpens' => {
						'oid' => 'tcpActiveOpens',
						'option' => 'counter,0:U'
					},
					'tcpPassiveOpens' => {
						'oid' => 'tcpPassiveOpens',
						'option' => 'counter,0:U'
					},
					'tcpAttemptFails' => {
						'oid' => 'tcpAttemptFails',
						'option' => 'counter,0:U'
					},
					'tcpEstabResets' => {
						'oid' => 'tcpEstabResets',
						'option' => 'counter,0:U'
					},
					'tcpCurrEstab' => {
						'oid' => 'tcpCurrEstab',
						'option' => 'gauge,0:U'
					},
					'tcpInSegs' => {
						'oid' => 'tcpInSegs',
						'option' => 'counter,0:U'
					},
					'tcpOutSegs' => {
						'oid' => 'tcpOutSegs',
						'option' => 'counter,0:U'
					},
					'tcpRetransSegs' => {
						'oid' => 'tcpRetransSegs',
						'option' => 'counter,0:U'
					},
					'tcpInErrs' => {
						'oid' => 'tcpInErrs',
						'option' => 'counter,0:U'
					},
					'tcpOutRsts' => {
						'oid' => 'tcpOutRsts',
						'option' => 'counter,0:U'
					}
				},
			},
			'mib2ip' => {
				'graphtype' => 'ip,frag',
				'snmp' => {
					'ipFragFails' => {
						'oid' => 'ipFragFails',
						'option' => 'counter,0:U'
					},
					'ipInAddrErrors' => {
						'oid' => 'ipInAddrErrors',
						'option' => 'counter,0:U'
					},
					'ipOutRequests' => {
						'oid' => 'ipOutRequests',
						'option' => 'counter,0:U'
					},
					'ipFragCreates' => {
						'oid' => 'ipFragCreates',
						'option' => 'counter,0:U'
					},
					'ipInDiscards' => {
						'oid' => 'ipInDiscards',
						'option' => 'counter,0:U'
					},
					'ipInHdrErrors' => {
						'oid' => 'ipInHdrErrors',
						'option' => 'counter,0:U'
					},
					'ipInReceives' => {
						'oid' => 'ipInReceives',
						'option' => 'counter,0:U'
					},
					'ipFragOKs' => {
						'oid' => 'ipFragOKs',
						'option' => 'counter,0:U'
					},
					'ipForwDatagrams' => {
						'oid' => 'ipForwDatagrams',
						'option' => 'counter,0:U'
					},
					'ipOutDiscards' => {
						'oid' => 'ipOutDiscards',
						'option' => 'counter,0:U'
					},
					'ipInDelivers' => {
						'oid' => 'ipInDelivers',
						'option' => 'counter,0:U'
					},
					'ipReasmFails' => {
						'oid' => 'ipReasmFails',
						'option' => 'counter,0:U'
					},
					'ipReasmOKs' => {
						'oid' => 'ipReasmOKs',
						'option' => 'counter,0:U'
					},
					'ipReasmReqds' => {
						'oid' => 'ipReasmReqds',
						'option' => 'counter,0:U'
					},
					'ipInUnknownProtos' => {
						'oid' => 'ipInUnknownProtos',
						'option' => 'counter,0:U'
					}
				}
			}
		}
	},

	'systemHealth' => {
		'sections' => 'Cards',
		'sys' => {
			'Cards' => {
				'indexed' => 'localSlot',
				'index_oid' => '.1.3.6.1.4.1.8255.1.2.1.2.5.1.1.4.1',
				'headers' => 'index,cardType,adminStatus,operStatus,temp,macAddress,redundancyStatus',
				'snmp' => {
					'localSlot' => {
						'oid' => '.1.3.6.1.4.1.8255.1.2.1.2.5.1.1.4.1',
						'title' => 'Slot'
					},
					'cardType' => {
						'oid' => '.1.3.6.1.4.1.8255.1.2.1.2.5.1.1.4.1',
						'title' => 'Type'
					},
					'adminStatus' => {
						'oid' => '.1.3.6.1.4.1.8255.1.2.1.2.5.1.1.1.1',
						'title' => 'Admin Status',
						'replace' => {
							'0' => 'unset',
							'1' => 'testing',
							'2' => 'down',
							'3' => 'up'
						}
					},
					'operStatus' => {
						'oid' => '.1.3.6.1.4.1.8255.1.2.1.2.5.1.1.15.1',
						'title' => 'Oper Status',
						'replace' => {
							'0' => 'unset',
							'1' => 'testing',
							'2' => 'down',
							'3' => 'up'
						}
					},
					'temp' => {
						'oid' => '.1.3.6.1.4.1.8255.1.2.1.2.5.1.1.22.1',
						'title' => 'Temperture',
						'replace' => {
							'-300' => 'unavailable'
						}
					},
					'macAddress' => {
						'oid' => '.1.3.6.1.4.1.8255.1.2.1.2.5.1.1.12.1',
						'title' => 'MAC Address'
					},
					'redundancyStatus' => {
						'oid' => '.1.3.6.1.4.1.8255.1.2.1.2.5.1.1.18.1',
						'title' => 'Redundancy Status',
						'replace' => {
							'0' => 'Not Redundant',
							'1' => 'Primary',
							'2' => 'Secondary'
						}
					},
				},
			},
		},
		'rrd' => {
			'Cards' => {
				'snmp' => {
					'adminStatus' => {
						'oid' => '.1.3.6.1.4.1.8255.1.2.1.2.5.1.1.1.1',
						'title' => 'Admin Status',
						'replace' => {
							'0' => 'unset',
							'1' => 'testing',
							'2' => 'down',
							'3' => 'up'
						}
					},
					'operStatus' => {
						'oid' => '.1.3.6.1.4.1.8255.1.2.1.2.5.1.1.15.1',
						'title' => 'Oper Status',
						'replace' => {
							'0' => 'unset',
							'1' => 'testing',
							'2' => 'down',
							'3' => 'up'
						}
					},
					'temp' => {
						'oid' => '.1.3.6.1.4.1.8255.1.2.1.2.5.1.1.22.1',
						'title' => 'Temperture',
						'replace' => {
							'-300' => 'unavailable'
						}
					},
					'redundancyStatus' => {
						'oid' => '.1.3.6.1.4.1.8255.1.2.1.2.5.1.1.18.1',
						'title' => 'Redundancy Status',
						'replace' => {
							'0' => 'Not Redundant',
							'1' => 'Primary',
							'2' => 'Secondary'
						}
					},
				},
			},
		},
	},
	'interface' => {
		'sys' => {
			'standard' => {
				'snmp' => {
					'ifOperStatus' => {
						'replace' => {
							'0' => 'unset',
							'1' => 'up',
							'2' => 'down',
							'3' => 'testing',
							'4' => 'unknown',
							'5' => 'dormant',
							'6' => 'notPresent',
							'7' => 'lowerLayerDown'
						},
						'oid' => 'ifOperStatus',
						'title' => 'Oper Status'
					},
					'ifDescr' => {
						'oid' => 'ifName',
						'title' => 'Name (ifName/ifDescr)',
						'calculate' => 'CVAR1=ifDescr; CVAR2=Hardware; $r = ("$CVAR1" eq "noSuchObject" or ("$CVAR1" eq "0" and "$CVAR2" ne "") ? "$CVAR2": "$CVAR1"); ',
					},
					'ifSpeed' => {
						'oid' => 'ifSpeed',
						'title' => 'Bandwidth',
						'replace' => {
							'10000000' => '100000000',
						},
					},
					'ifPhysAddress' => {
						'oid' => 'ifPhysAddress',
						'title' => 'Physical Address',
					},
					'ifAdminStatus' => {
						'replace' => {
							'0' => 'unset',
							'1' => 'up',
							'2' => 'down',
							'3' => 'testing',
							'4' => 'unknown',
							'5' => 'dormant',
							'6' => 'notPresent',
							'7' => 'lowerLayerDown'
						},
						'oid' => 'ifAdminStatus',
						'title' => 'Admin Status'
					},
					'Description' => {
						'oid' => 'ifAlias',
						'title' => 'Description (ifAlias)',
						'replace' => {
							'0' => 'unset'
						}
					},
					'Hardware' => {
						'oid' => 'ifDescr',
						'title' => 'Hardware (ifDescr)',
					},
					'ifType' => {
						'oid' => 'ifType',
						'title' => 'Type (ifType)'
					},
					'ifLastChange' => {
						'oid' => 'ifLastChange',
						'title' => 'Last Change'
					}
				},
				'indexed' => 'true'
			}
		},
		'rrd' => {
			'interface' => {
				'indexed' => 'true',
				'snmp' => {
					'ifOperStatus' => {
						'replace' => {
							'0' => 'unset',
							'1' => 'up',
							'2' => 'down',
							'3' => 'testing',
							'4' => 'unknown',
							'5' => 'dormant',
							'6' => 'notPresent',
							'7' => 'lowerLayerDown'
						},
						'oid' => 'ifOperStatus',
						'option' => 'gauge,0:100',
					},
					'ifDescr' => {
						'oid' => 'ifName',
						'calculate' => 'CVAR1=ifDescr; CVAR2=Hardware; $r = ("$CVAR1" eq "noSuchObject" or ("$CVAR1" eq "0" and "$CVAR2" ne "") ? "$CVAR2": "$CVAR1"); ',
					},
					'Hardware' => {
						'oid' => 'ifDescr',
						'option' => 'nosave',
					},
					'ifInOctets' => {
						'oid' => 'ifInOctets',
						'option' => 'counter,0:U'
					},
					'ifAdminStatus' => {
						'replace' => {
							'0' => 'unset',
							'1' => 'up',
							'2' => 'down',
							'3' => 'testing',
							'4' => 'unknown',
							'5' => 'dormant',
							'6' => 'notPresent',
							'7' => 'lowerLayerDown'
						},
						'oid' => 'ifAdminStatus'
					},
					'ifOutOctets' => {
						'oid' => 'ifOutOctets',
						'option' => 'counter,0:U'
					},
					'ifHCInOctets' => {
						'oid' => 'ifHCInOctets',
						'option' => 'counter,0:U'
					},
					'ifHCOutOctets' => {
						'oid' => 'ifHCOutOctets',
						'option' => 'counter,0:U'
					},
				},
				'threshold' => 'util_in,util_out',
				'graphtype' => 'bits,abits,maxbits,util,autil'
			},
			'pkts_hc' => {
				'indexed' => 'true',
				'threshold' => 'pkt_errors_in,pkt_errors_out',
				'graphtype' => 'pkts_hc,errpkts_hc',
				'snmp' => {
					'ifInOctets' => {
						'oid' => 'ifInOctets',
						'option' => 'counter,0:U'
					},
					'ifInUcastPkts' => {
						'oid' => 'ifInUcastPkts',
						'option' => 'counter,0:U'
					},
					'ifInMcastPkts' => {
						'oid' => 'ifInMulticastPkts',
						'option' => 'counter,0:U'
					},
					'ifInBcastPkts' => {
						'oid' => 'ifInBroadcastPkts',
						'option' => 'counter,0:U'
					},
					'ifInDiscards' => {
						'oid' => 'ifInDiscards',
						'option' => 'counter,0:U'
					},
					'ifInErrors' => {
						'oid' => 'ifInErrors',
						'option' => 'counter,0:U'
					},
					'ifOutOctets' => {
						'oid' => 'ifOutOctets',
						'option' => 'counter,0:U'
					},
					'ifOutUcastPkts' => {
						'oid' => 'ifOutUcastPkts',
						'option' => 'counter,0:U'
					},
					'ifOutMcastPkts' => {
						'oid' => 'ifOutMulticastPkts',
						'option' => 'counter,0:U'
					},
					'ifOutBcastPkts' => {
						'oid' => 'ifOutBroadcastPkts',
						'option' => 'counter,0:U'
					},
					'ifOutDiscards' => {
						'oid' => 'ifOutDiscards',
						'option' => 'counter,0:U'
					},
					'ifOutErrors' => {
						'oid' => 'ifOutErrors',
						'option' => 'counter,0:U'
					},
					'ifHCInOctets' => {
						'oid' => 'ifHCInOctets',
						'option' => 'counter,0:U'
					},
					'ifHCInUcastPkts' => {
						'oid' => 'ifHCInUcastPkts',
						'option' => 'counter,0:U'
					},
					'ifHCInMcastPkts' => {
						'oid' => 'ifHCInMulticastPkts',
						'option' => 'counter,0:U'
					},
					'ifHCInBcastPkts' => {
						'oid' => 'ifHCInBroadcastPkts',
						'option' => 'counter,0:U'
					},
					'ifHCOutOctets' => {
						'oid' => 'ifHCOutOctets',
						'option' => 'counter,0:U'
					},
					'ifHCOutUcastPkts' => {
						'oid' => 'ifHCOutUcastPkts',
						'option' => 'counter,0:U'
					},
					'ifHCOutMcastPkts' => {
						'oid' => 'ifHCOutMulticastPkts',
						'option' => 'counter,0:U'
					},
					'ifHCOutBcastPkts' => {
						'oid' => 'ifHCOutBroadcastPkts',
						'option' => 'counter,0:U'
					}
				}
			}
		},
		'noevent' => {
			'ifDescr' => 'null',
			'Description' => '^!',
			'ifType' => 'other'
		},
		'nocollect' => {
			'ifOperStatus' => 'other',
			'ifDescr' => 'sublayer|null|veth.*',
			'Description' => '^#',
			'noDescription' => 'false',
			'ifType' => 'other|softwareloopback|isdn'
		}
	}
);
