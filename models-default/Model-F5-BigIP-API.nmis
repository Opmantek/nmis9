#
# $Id: Model-F5-BigIP.nmis,v0.7.1 2022/02/17 13:00 simonm Exp $
#
#  Copyright 1999-2011 Opmantek Limited (www.opmantek.com)
#
#  ALL CODE MODIFICATIONS MUST BE SENT TO CODE@OPMANTEK.COM
#
#  This file is part of Network Management Information System (“NMIS”).
#
#  NMIS is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  NMIS is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with NMIS (most likely in a file named LICENSE).
#  If not, see <http://www.gnu.org/licenses/>
#
#  For further information on NMIS or for a license other than GPL please see
#  www.opmantek.com or email contact@opmantek.com
#
#  User group details:
#  http://support.opmantek.com/users/
#
# *****************************************************************************
#
# Version history
# v0.2 - 2Feb22 - added cluster status and sync status with alerting - simonm
# v0.3 - 2Feb22 - added Pool member information - simonm
# v0.4 - 8Feb22 - added swap memory graphs
# v0.4.1 - 9Feb22 - general updates
# v0.4.1.1 10Feb 22 - fixed reported swap memory value with updated oids
# v0.5 - 10Feb22 - updated total memory to include tmm and other
# v0.6 - 10Feb22 - added physical memory graphs
# v0.6.1 - 17Feb22 - add ltm VS status into inventory
# v0.7 - 17Feb22 - fixed CPU graphing, fixed VS down alerting
# v0.7.1 - 24Feb22 - added alerting for CPU, Memory, Swap, Storage
#
#
#OIDs
#Blade air outlet temperature 1 "f5TempOutlet1"	".1.3.6.1.4.1.3375.2.1.3.2.4.2.1.2.1.1"
#Blade air inlet temperature 1 "f5TempInlet1"	".1.3.6.1.4.1.3375.2.1.3.2.4.2.1.2.2.1"
#Blade air outlet temperature 2 "f5TempOutlet2"	".1.3.6.1.4.1.3375.2.1.3.2.4.2.1.2.3.1"
#Blade air inlet temperature 2 "f5TempInlet2"	".1.3.6.1.4.1.3375.2.1.3.2.4.2.1.2.4.1"
#CPU "f5CPUProcessorLoad"     ".1.3.6.1.4.1.3375.2.1.12.2.2.1.5.4.100.97.116.97"

%hash = (
	'-common-' => {
		'class' => {
			'database' => {
				'common-model' => 'database'
			},
			'threshold' => {
				'common-model' => 'threshold'
			},
			'summary' => {
				'common-model' => 'summary'
			},
			'heading' => {
				'common-model' => 'heading'
			},
			'stats' => {
				'common-model' => 'stats'
			},
			'event' => {
				'common-model' => 'event'
			},
			'f5' => {
				'common-model' => 'F5-BigIP'
			}
		}
	},
#	'database' => {
#		'type' => {
#			'VirtualServTable' => '/nodes/$node/health/virtservtable-$index.rrd',
#			'F5_Pools' => '/nodes/$node/health/F5_Pools-$index.rrd',
#		}
#	},
#	'heading' => {
#		'graphtype' => {
#			'F5-Pools' => 'F5 Pool Status',
#			'F5-LTM-State' => 'Local Traffic Manager (LTM) State',
#			'F5-LTM-Connections' => 'Local Traffic Manager (LTM) Connections',
#		}
#	},
#	'stats' => {
#		'type' => {
#			'F5_Pools' => [
#				'DEF:curConns=$database:curConns:AVERAGE',
#				'PRINT:curConns:AVERAGE:curConns=%1.0lf',
#				'DEF:bitsIn=$database:bitsIn:AVERAGE',
#				'PRINT:bitsIn:AVERAGE:bitsIn=%1.0lf',
#				'DEF:bitsOut=$database:bitsOut:AVERAGE',
#				'PRINT:bitsOut:AVERAGE:bitsOut=%1.0lf',
#				'DEF:pktsIn=$database:pktsIn:AVERAGE',
#				'PRINT:pktsIn:AVERAGE:pktsIn=%1.0lf',
#				'DEF:pktsOut=$database:pktsOut:AVERAGE',
#				'PRINT:pktsOut:AVERAGE:pktsOut=%1.0lf'
#			],
#		},
#	},
	'alerts' => {
		'VirtualServTable' => {
			'VirtualServTableState' => {
				'element' => 'ltmVirtualServName',
				'event' => 'Virtual Server Down',
				'level' => 'Major',
				'test' => 'CVAR1=vsStatusAvailState;$CVAR1 ne 1',
				'type' => 'test',
				'title' => "Virtual Server Status",
				'unit' => '',
				'value' => 'CVAR1=vsStatusAvlTxt;int($CVAR1)'
			}
		},
	},
	'system' => {
		'nodeModel' => 'F5-BigIP-API',
		'nodeType' => 'Server',
		'nodeVendor' => 'F5 Labs, Inc.',
		'nodegraph' => 'health,F5-Memory,F5-Connection,response,F5-Swap-Memory,F5-APM_ActiveSess',
		'sys' => {
			'standard' => {
				'snmp' => {
					'sysLocation' => {
						'replace' => {
							'' => 'default'
						},
						'oid' => 'sysLocation',
						'title' => 'Location'
					},
					'sysDescr' => {
						'oid' => 'sysDescr',
						'title' => 'Description'
					},
					'sysObjectID' => {
						'oid' => 'sysObjectID'
					},
					'sysUpTime' => {
						'oid' => 'hrSystemUptime',
						'title' => 'Uptime'
					},
					'ifNumber' => {
						'oid' => 'ifNumber',
						'title' => 'Interfaces'
					},
					'sysContact' => {
						'replace' => {
							'' => 'default'
						},
						'oid' => 'sysContact',
						'title' => 'Contact'
					},
					'sysName' => {
						'oid' => 'sysName'
					}
				}
			},
		},
		'rrd' => {
			'mib2ip' => {
				'snmp' => {
					'ipInAddrErrors' => {
						'oid' => 'ipInAddrErrors',
						'option' => 'counter,0:U'
					},
					'ipFragCreates' => {
						'oid' => 'ipFragCreates',
						'option' => 'counter,0:U'
					},
					'ipInDiscards' => {
						'oid' => 'ipInDiscards',
						'option' => 'counter,0:U'
					},
					'ipInReceives' => {
						'oid' => 'ipInReceives',
						'option' => 'counter,0:U'
					},
					'ipFragOKs' => {
						'oid' => 'ipFragOKs',
						'option' => 'counter,0:U'
					},
					'ipInDelivers' => {
						'oid' => 'ipInDelivers',
						'option' => 'counter,0:U'
					},
					'ipReasmFails' => {
						'oid' => 'ipReasmFails',
						'option' => 'counter,0:U'
					},
					'ipReasmReqds' => {
						'oid' => 'ipReasmReqds',
						'option' => 'counter,0:U'
					},
					'ipFragFails' => {
						'oid' => 'ipFragFails',
						'option' => 'counter,0:U'
					},
					'ipOutRequests' => {
						'oid' => 'ipOutRequests',
						'option' => 'counter,0:U'
					},
					'ipOutNoRoutes' => {
						'oid' => 'ipOutNoRoutes'
					},
					'ipInHdrErrors' => {
						'oid' => 'ipInHdrErrors',
						'option' => 'counter,0:U'
					},
					'ipForwDatagrams' => {
						'oid' => 'ipForwDatagrams',
						'option' => 'counter,0:U'
					},
					'ipOutDiscards' => {
						'oid' => 'ipOutDiscards',
						'option' => 'counter,0:U'
					},
					'ipReasmOKs' => {
						'oid' => 'ipReasmOKs',
						'option' => 'counter,0:U'
					},
					'ipInUnknownProtos' => {
						'oid' => 'ipInUnknownProtos',
						'option' => 'counter,0:U'
					}
				},
				'graphtype' => 'ip,frag'
			},
		},
	},


	'systemHealth' => {
#		'sections' => 'F5_Temperature,F5_CPU,F5_Cores,F5_Storage,F5_Connection,VirtualServTable,F5_Pools',
		'sys' => {
			'VirtualServTable' => {
				'headers' => 'ltmVirtualServName,ltmVirtualServAddr,virtualServIpProto,ltmVirtualServPort,virtServConnLimit,ltmStatClientCurCon,ltmVsStatAvailState',
				'snmp' => {
					'ltmVirtualServName' => {
						'title' => 'Server Name',
					},
					'ltmVirtualServAddr' => {
						'title' => 'IP Address',
					},
					'ltmVirtualServPort' => {
						'title' => 'Port',
					},
					'virtualServIpProto' => {
						'title' => 'IP Proto',
					},
					'virtServConnLimit' => {
						'title' => 'ConnLimit',
					},
					'vsStatusAvailState' => {
						'title' => 'VS Status'
					},
					'vsStatusAvlTxt' => {
						'title' => 'Virtual Server State'
					},
					'ltmStatClientCurCon' => {
						'title' => 'Current Connections'
					},
					'ltmVsStatAvailState' => {
						'replace' => {
							'0' => '10',
							'1' => '100',
							'2' => '10',
							'3' => '0',
							'4' => '50',
							'5' => '50'
						},
						'title' => 'Virtual Server State'
					},
				},
			},
			'F5_Pools' => {
				'headers' => 'poolMbrPoolName,poolMbrNodeName,poolMbrAddr,poolMbrPort,poolMbrAvailState,curConns,bitsIn,bitsOut,pktsIn,pktsOut',
				'snmp' => {
					'poolMbrPoolName' => {
						'title' => 'Pool Name',
					},
					'poolMbrNodeName' => {
						'title' => 'Member Name',
					},
					'poolMbrAddr' => {
						'title' => 'Pool Member Address',
						'calculate' => '$r =~ s/^0x/ /; $r = join ".", map { hex } $r =~ /[a-f\d]{2}/g; $r =~ s/(?:\.0){3,}/::/g;return $r;',
					},
					'poolMbrPort' => {
						'title' => 'Port number',
					},
					'poolMbrAvailState' => {
						'replace' => {
							'0' => 'none - error',
							'1' => 'green - available',
							'2' => 'yellow - not currently available',
							'3' => 'red - not available',
							'4' => 'blue - unknown availability',
							'5' => 'gray - unlicensed',
						},
						'title' => 'Pool Member State',
					},
					'curConns' => {
						'title' => 'Current Connections',
					},
					'bitsIn' => {
						'title' => 'Bits In',
					},
					'bitsOut' => {
						'title' => 'Bits Out',
					},
					'pktsIn' => {
						'title' => 'Packets In',
					},
					'pktsOut' => {
						'title' => 'Packets Out',
					},
				},
			},
		},
		'rrd' => {
			'VirtualServTable' => {
				'graphtype' => 'F5-LTM-Connections,F5-LTM-State',
				'indexed' => 'true',
				'snmp' => {
					'statClientCurCon' => {
						'option' => 'counter,0:U',
					},
					'vsStatAvailState' => {
						'title' => 'Virtual Server State'
					},
					'vsStatusAvlTxt' => {
						'option' => 'nosave'
					},
					'ltmStatClientCurCon' => {
						'option' => 'counter,0:U',
						'title' => 'Current Connections'
					},
					'ltmVsStatAvailState' => {
						'replace' => {
							'0' => '10',
							'1' => '100',
							'2' => '10',
							'3' => '0',
							'4' => '50',
							'5' => '50'
						},
						'title' => 'Virtual Server State'
					},
				}
			},
			'F5_Pools' => {
				'graphtype' => 'F5-Pools',
				'snmp' => {
					'poolMbrAvailState' => {
						'replace' => {
							'0' => 'none - error',
							'1' => 'green - available',
							'2' => 'yellow - not currently available',
							'3' => 'red - not available',
							'4' => 'blue - unknown availability',
							'5' => 'gray - unlicensed',
						},
						'title' => 'Pool Member State',
					},
					'curConns' => {
						'title' => 'Current Connections',
					},
					'bitsIn' => {
						'title' => 'Bits In',
					},
					'bitsOut' => {
						'title' => 'Bits Out',
					},
					'pktsIn' => {
						'title' => 'Packets In',
					},
					'pktsOut' => {
						'title' => 'Packets Out',
					},
				},
			},
		},
	},
	'interface' => {
		'sys' => {
			'standard' => {
				'indexed' => 'true',
				'snmp' => {
					'ifOperStatus' => {
						'replace' => {
							'6' => 'notPresent',
							'1' => 'up',
							'4' => 'unknown',
							'3' => 'testing',
							'7' => 'lowerLayerDown',
							'2' => 'down',
							'5' => 'dormant'
						},
						'oid' => 'ifOperStatus',
						'title' => 'Oper Status'
					},
					'ifDescr' => {
						#need to check it does ifDescr
						'oid' => 'ifDescr',
						'title' => 'Name'
					},
					'ifPhysAddress' => {
						'oid' => 'ifPhysAddress',
						'title' => 'Physical Address',
					},
					'ifSpeed' => {
						'oid' => 'ifSpeed',
						'title' => 'Bandwidth'
					},
					'ifAdminStatus' => {
						'replace' => {
							'6' => 'notPresent',
							'1' => 'up',
							'4' => 'unknown',
							'3' => 'testing',
							'7' => 'lowerLayerDown',
							'2' => 'down',
							'5' => 'dormant'
						},
						'oid' => 'ifAdminStatus',
						'title' => 'Admin Status'
					},
					'ifType' => {
						'oid' => 'ifType',
						'title' => 'Type (ifType)'
					},
					'ifLastChange' => {
						'oid' => 'ifLastChange',
						'title' => 'Last Change'
					}
				}
			},
			'extra' => {
				'indexed' => 'true',
				'snmp' => {
					'ifHighSpeed' => {
						'oid' => 'ifHighSpeed'
					},
					'Description' => {
						'oid' => 'ifAlias',
						'title' => 'Description (ifAlias)'
					}
				}
			}
		},
		'rrd' => {
			'interface' => {
				'indexed' => 'true',
				'snmp' => {
					'ifOperStatus' => {
						'replace' => {
							'6' => 'notPresent',
							'1' => 'up',
							'4' => 'unknown',
							'3' => 'testing',
							'7' => 'lowerLayerDown',
							'2' => 'down',
							'5' => 'dormant'
						},
						'oid' => 'ifOperStatus',
						'option' => 'gauge,0:100'
					},
					'ifDescr' => {
						'oid' => 'ifName'
					},
					'ifInOctets' => {
						'oid' => 'ifInOctets',
						'option' => 'counter,0:U'
					},
					'ifHCOutOctets' => {
						'oid' => 'ifHCOutOctets',
						'option' => 'counter,0:U'
					},
					'ifAdminStatus' => {
						'replace' => {
							'6' => 'notPresent',
							'1' => 'up',
							'4' => 'unknown',
							'3' => 'testing',
							'7' => 'lowerLayerDown',
							'2' => 'down',
							'5' => 'dormant'
						},
						'oid' => 'ifAdminStatus'
					},
					'ifOutOctets' => {
						'oid' => 'ifOutOctets',
						'option' => 'counter,0:U'
					},
					'ifHCInOctets' => {
						'oid' => 'ifHCInOctets',
						'option' => 'counter,0:U'
					}
				},
				'threshold' => 'util_in,util_out',
				'graphtype' => 'bits,abits,maxbits,util,autil'
			},
			'pkts_hc' => {
				'indexed' => 'true',
				'threshold' => 'pkt_errors_in,pkt_errors_out',
				'graphtype' => 'pkts_hc,errpkts_hc',
				'snmp' => {
					'ifHCInOctets' => {
						'oid' => 'ifHCInOctets',
						'option' => 'counter,0:U'
					},
					'ifHCInUcastPkts' => {
						'oid' => 'ifHCInUcastPkts',
						'option' => 'counter,0:U'
					},
					'ifHCInMcastPkts' => {
						'oid' => 'ifHCInMulticastPkts',
						'option' => 'counter,0:U'
					},
					'ifHCInBcastPkts' => {
						'oid' => 'ifHCInBroadcastPkts',
						'option' => 'counter,0:U'
					},
					'ifInDiscards' => {
						'oid' => 'ifInDiscards',
						'option' => 'counter,0:U'
					},
					'ifInErrors' => {
						'oid' => 'ifInErrors',
						'option' => 'counter,0:U'
					},
					'ifHCOutOctets' => {
						'oid' => 'ifHCOutOctets',
						'option' => 'counter,0:U'
					},
					'ifHCOutUcastPkts' => {
						'oid' => 'ifHCOutUcastPkts',
						'option' => 'counter,0:U'
					},
					'ifHCOutMcastPkts' => {
						'oid' => 'ifHCOutMulticastPkts',
						'option' => 'counter,0:U'
					},
					'ifHCOutBcastPkts' => {
						'oid' => 'ifHCOutBroadcastPkts',
						'option' => 'counter,0:U'
					},
					'ifOutDiscards' => {
						'oid' => 'ifOutDiscards',
						'option' => 'counter,0:U'
					},
					'ifOutErrors' => {
						'oid' => 'ifOutErrors',
						'option' => 'counter,0:U'
					},
				}
			}
		},
		'collect' => {
			'Description' => '(CNOC|Collection)',
		},
		'nocollect' => {
			'ifOperStatus' => 'other',
			'ifDescr' => 'sublayer|null|controller|^e0|^e1|^t0|^t1|^t3|async|bri[0-9]$|virtual|Bearer Channel|virtual-access',
			'Description' => '^#',
			'noDescription' => 'true',
			'ifType' => 'lapd|ds0|ds1|other|softwareloopback|isdn'
		},
		'noevent' => {
			'Description' => '^!',
			'ifDescr' => 'null',
			'ifType' => 'other'
		}
	},	
);
