#
## $Id: Model-Default.nmis,v 8.7 2012/11/16 05:46:04 keiths Exp $
#
#  Copyright 1999-2011 Opmantek Limited (www.opmantek.com)
#  
#  ALL CODE MODIFICATIONS MUST BE SENT TO CODE@OPMANTEK.COM
#  
#  This file is part of Network Management Information System (“NMIS”).
#  
#  NMIS is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  NMIS is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with NMIS (most likely in a file named LICENSE).  
#  If not, see <http://www.gnu.org/licenses/>
#  
#  For further information on NMIS or for a license other than GPL please see
#  www.opmantek.com or email contact@opmantek.com 
#  
#  User group details:
#  http://support.opmantek.com/users/
#  
# *****************************************************************************

%hash = (
  '-common-' => {
    'class' => {
      'database' => {
        'common-model' => 'database'
      },
      'threshold' => {
        'common-model' => 'threshold'
      },
      'summary' => {
        'common-model' => 'summary'
      },
      'heading' => {
        'common-model' => 'heading'
      },
      'stats' => {
        'common-model' => 'stats'
      },
      'event' => {
        'common-model' => 'event'
      }
    }
  },
  'system' => {
    'nodegraph' => 'health,response,ip,AviatInputVolt,AviatPCBTempns,AviatPCBTempnm,AviatPCBTempnp,AviatDCConTemp,AviatFPGAJunTemp,AviatPATempRF1,AviatPATempRF2',
    'nodeModel' => 'Aviat',
    'nodeType' => 'BackHaul',
    'sys' => {
      'standard' => {
        'snmp' => {
          'sysLocation' => {
            'replace' => {
              '' => 'default'
            },
            'oid' => 'sysLocation',
            'title' => 'Location'
          },
          'sysDescr' => {
            'oid' => 'sysDescr',
            'title' => 'Description'
          },
          'sysObjectID' => {
            'oid' => 'sysObjectID'
          },
          'sysUpTime' => {
            'oid' => 'sysUpTime',
            'title' => 'Uptime'
          },
          'ifNumber' => {
            'oid' => 'ifNumber',
            'title' => 'Interfaces'
          },
          'sysContact' => {
            'replace' => {
              '' => 'default'
            },
            'oid' => 'sysContact',
            'title' => 'Contact'
          },
          'sysName' => {
            'oid' => 'sysName'
          },
          'sysSerial' => {
            'oid' => '.1.3.6.1.2.1.47.1.1.1.1.11.2',
            'title' => 'SerialNumber'
          },
          # 'InputVolt' => {
          #   'oid' => '1.3.6.1.2.1.99.1.1.1.4.3',
          #   'title' => 'Input Voltage',
          #   'calculate' => '$r = $r / 1000;'
          # },
          # 'PCBTempns' => {
          #   'oid' => '1.3.6.1.2.1.99.1.1.1.4.5',
          #   'title' => 'PCB Temperature (near switch)',
          #   'calculate' => '$r = $r / 1000;'
          # },
          # 'PCBTempnm' => {
          #   'oid' => '1.3.6.1.2.1.99.1.1.1.4.6',
          #   'title' => 'PCB Temperature (near modem)',
          #   'calculate' => '$r = $r / 1000;'
          # },
          # 'PCBTempnp' => {
          #   'oid' => '1.3.6.1.2.1.99.1.1.1.4.7',
          #   'title' => 'PCB Temperature (near Power Supply)',
          #   'calculate' => '$r = $r / 1000;'
          # },
          # 'DCConTemp' => {
          #   'oid' => '1.3.6.1.2.1.99.1.1.1.4.8',
          #   'title' => 'DC/DC Converter Temperature',
          #   'calculate' => '$r = $r / 1000;'
          # },
          # 'FPGAJunTemp' => {
          #   'oid' => '1.3.6.1.2.1.99.1.1.1.4.9',
          #   'title' => 'FPGA Junction Temperature',
          #   'calculate' => '$r = $r / 1000;'
          # },
          # 'PATempRF1' => {
          #   'oid' => '1.3.6.1.2.1.99.1.1.1.4.35',
          #   'title' => 'PA Temperature RF Module RFModule 1/1',
          #   'calculate' => '$r = $r / 1000;'
          # },
        }
      },
    },
    'rrd' => {
      'health' => {
        'no_graphs' => '1',
        'threshold' => 'Proactive loss',
        'skip_collect' => '1'
      },
      'mib2ip' => {
        'snmp' => {
          'ipInAddrErrors' => {
            'oid' => 'ipInAddrErrors',
            'option' => 'counter,0:U'
          },
          'ipFragCreates' => {
            'oid' => 'ipFragCreates',
            'option' => 'counter,0:U'
          },
          'ipInDiscards' => {
            'oid' => 'ipInDiscards',
            'option' => 'counter,0:U'
          },
          'ipInReceives' => {
            'oid' => 'ipInReceives',
            'option' => 'counter,0:U'
          },
          'ipFragOKs' => {
            'oid' => 'ipFragOKs',
            'option' => 'counter,0:U'
          },
          'ipInDelivers' => {
            'oid' => 'ipInDelivers',
            'option' => 'counter,0:U'
          },
          'ipReasmFails' => {
            'oid' => 'ipReasmFails',
            'option' => 'counter,0:U'
          },
          'ipReasmReqds' => {
            'oid' => 'ipReasmReqds',
            'option' => 'counter,0:U'
          },
          'ipFragFails' => {
            'oid' => 'ipFragFails',
            'option' => 'counter,0:U'
          },
          'ipOutRequests' => {
            'oid' => 'ipOutRequests',
            'option' => 'counter,0:U'
          },
          'ipOutNoRoutes' => {
            'oid' => 'ipOutNoRoutes'
          },
          'ipInHdrErrors' => {
            'oid' => 'ipInHdrErrors',
            'option' => 'counter,0:U'
          },
          'ipForwDatagrams' => {
            'oid' => 'ipForwDatagrams',
            'option' => 'counter,0:U'
          },
          'ipOutDiscards' => {
            'oid' => 'ipOutDiscards',
            'option' => 'counter,0:U'
          },
          'ipReasmOKs' => {
            'oid' => 'ipReasmOKs',
            'option' => 'counter,0:U'
          },
          'ipInUnknownProtos' => {
            'oid' => 'ipInUnknownProtos',
            'option' => 'counter,0:U'
          }
        },
        'graphtype' => 'ip,frag'
      },
      'AviatSensor' => {
        'graphtype' => 'AviatInputVolt,AviatPCBTempns,AviatPCBTempnm,AviatPCBTempnp,AviatDCConTemp,AviatFPGAJunTemp,AviatPATempRF1',
        'snmp' => {
          'InputVolt' => {
            'oid' => '1.3.6.1.2.1.99.1.1.1.4.3',
            'option' => 'gauge,U:U',
            'calculate' => '$r = $r / 1000;'
          },
          'PCBTempns' => {
            'oid' => '1.3.6.1.2.1.99.1.1.1.4.5',
            'option' => 'gauge,U:U',
            'calculate' => '$r = $r / 1000;'
          },
          'PCBTempnm' => {
            'oid' => '1.3.6.1.2.1.99.1.1.1.4.6',
            'option' => 'gauge,U:U',
            'calculate' => '$r = $r / 1000;'
          },
          'PCBTempnp' => {
            'oid' => '1.3.6.1.2.1.99.1.1.1.4.7',
            'option' => 'gauge,U:U',
            'calculate' => '$r = $r / 1000;'
          },
          'DCConTemp' => {
            'oid' => '1.3.6.1.2.1.99.1.1.1.4.8',
            'option' => 'gauge,U:U',
            'calculate' => '$r = $r / 1000;'
          },
          'FPGAJunTemp' => {
            'oid' => '1.3.6.1.2.1.99.1.1.1.4.9',
            'option' => 'gauge,U:U',
            'calculate' => '$r = $r / 1000;'
          },
          'PATempRF1' => {
            'oid' => '1.3.6.1.2.1.99.1.1.1.4.35',
            'option' => 'gauge,U:U',
            'calculate' => '$r = $r / 1000;'
          },
        },
      },
    }
  },
  'systemHealth' => {
    'sections' => 'ifTable,AviatWirelessLinkQuality,EntPhysicalEntry',
    'sys' => {

      'ifTable' => {
        'indexed' => 'ifDescr',
        'headers' => 'ifDescr,Description,ifType,ifAdminStatus,ifOperStatus,ifLastChange,ifSpeed,ifHighSpeed',
        'snmp' => {
          'ifDescr' => {
            'oid' => 'ifName',
            'title' => 'Name (ifName)'
          },
          'ifType' => {
            'oid' => 'ifType',
            'title' => 'Type (ifType)',
            'replace' => {
              '6' => 'ethernetCsmacd',
              '37' => 'atm',
              '135' => 'l2vlan',
              '188' => 'radioMAC',
              '194' => 'atmVciEndPt',
              '209' => 'bridge',
              '244' => 'wwanPP2',
              '249' => 'aluELP',
              '250' => 'gpon',
            },              
          },
          'ifAdminStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '4' => 'unknown',
              '1' => 'up',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifAdminStatus',
            'title' => 'Admin Status'
          },
          'ifOperStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '4' => 'unknown',
              '1' => 'up',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifOperStatus',
            'title' => 'Oper Status'
          },
          'Description' => {
            'oid' => 'ifDescr',
            'title' => 'Description (ifDescr)'
          },
          'ifSpeed' => {
            'oid' => 'ifSpeed',
            'title' => 'ifSpeed'
          },
          'ifHighSpeed' => {
            'oid' => 'ifHighSpeed',
            'title' => 'ifHighSpeed'
          },
          'ifLastChange' => {
            'oid' => 'ifLastChange',
            'title' => 'Last Change'
          }
        }
      },

      'AviatWirelessLinkQuality' => {
        'headers' => 'RadioID,TXFreq,RXfreq,BER,TXMod,RXMod,TXPower,RSL,SNR',
        'indexed' => 'true',
        'index_oid' => '1.3.6.1.4.1.2509.9.5.2.1.1.1',
        'snmp' => {
          'RadioID' => {
            'oid' => '1.3.6.1.4.1.2509.9.15.2.2.1.12',
            'title' => 'Radio ID',
            'calculate' => 'my $ID="$r"; $ID=ord(substr($ID,3,1)); $r = $ID;'
          },
          'URadioID' => {
            'oid' => '1.3.6.1.4.1.2509.9.15.2.2.1.12',
            'title' => 'Radio ID',
            'calculate' => 'my $ID="$r"; $ID=ord(substr($ID,3,1)); $r = $ID + 1;'
          },
          'TXFreq' => {
            'oid' => '1.3.6.1.4.1.2509.9.5.2.1.1.1',
            'title' => 'TX Frequency'
          },
          'RXfreq' => {
            'oid' => '1.3.6.1.4.1.2509.9.5.2.1.1.2',
            'title' => 'RX Frequency'
          },
          'BER' => {
            'oid' => '1.3.6.1.4.1.2509.9.15.2.2.1.8',
            'title' => 'Bit Error Rate'
          },
          'TXMod' => {
            'oid' => '1.3.6.1.4.1.2509.9.3.2.1.1.13',
            'title' => 'TX Modulation'
          },
          'RXMod' => {
            'oid' => '1.3.6.1.4.1.2509.9.3.2.1.1.14',
            'title' => 'RX Modulation'
          },
          'TXPower' => {
            'oid' => '1.3.6.1.4.1.2509.9.33.2.2.1.7',
            'title' => 'TX Power',
            'calculate' => '$r = $r / 10;'
          },
          'RSL' => {
            'oid' => '1.3.6.1.4.1.2509.9.15.2.2.1.4',
            'title' => 'RSL',
            'calculate' => '$r = $r / 10;'
          },
          'SNR' => {
            'oid' => '1.3.6.1.4.1.2509.9.33.2.2.1.3',
            'title' => 'SNR',
            'calculate' => '$r = $r / 10;'
          },
        },
      },
      'EntPhysicalEntry' => {
        'headers' => 'entPhysicalName,entPhysicalMfgName,entPhysicalModelName',
        'indexed' => 'true',
        'index_oid' => '1.3.6.1.2.1.47.1.1.1.1.7',
        'snmp' => {
          'entPhysicalName' => {
            'oid' => '1.3.6.1.2.1.47.1.1.1.1.7',
            'title' => 'Physical Interface Name',
          },
          'entPhysicalMfgName' => {
            'oid' => '1.3.6.1.2.1.47.1.1.1.1.12',
            'title' => 'MFG Name',
          },
          'entPhysicalModelName' => {
            'oid' => '1.3.6.1.2.1.47.1.1.1.1.13',
            'title' => 'Model Name'
          },
        },
      },
    },
    'rrd' => {
      'AviatWirelessLinkQuality' => {
        'graphtype' => 'AviatRSL,AviatSNR,Aviatmodulation',
        'indexed' => 'true',
        'snmp' => {
          'BER' => {
            'oid' => '1.3.6.1.4.1.2509.9.15.2.2.1.8',
            'option' => 'gauge,U:U'
          },
          'TXMod' => {
            'oid' => '1.3.6.1.4.1.2509.9.3.2.1.1.13',
            'option' => 'gauge,U:U'
          },
          'RXMod' => {
            'oid' => '1.3.6.1.4.1.2509.9.3.2.1.1.14',
            'option' => 'gauge,U:U'
          },
          'TXPower' => {
            'oid' => '1.3.6.1.4.1.2509.9.33.2.2.1.7',
            'option' => 'gauge,U:U',
            'calculate' => '$r = $r / 10;'
          },
          'RSL' => {
            'oid' => '1.3.6.1.4.1.2509.9.15.2.2.1.4',
            'option' => 'gauge,U:U',
            'calculate' => '$r = $r / 10;'
          },
          'SNR' => {
            'oid' => '1.3.6.1.4.1.2509.9.33.2.2.1.3',
            'option' => 'gauge,U:U',
            'calculate' => '$r = $r / 10;'
          },
        },
      },
    }
  },
  'custom' => {
  #https://community.opmantek.com/display/NMIS/Managing+Nodes+with+High+Interface+Counts
    'interface' => {
      'ifAdminStatus' => 'false', # default = true
      'ifNumber' => 'false', # default = true
      'ifLastChange' => 'false', # default = false
      'ifTableLastChange' => 'false', # default = false
      'skipIfType' => 'doNotSkip',
      'skipIfDescr' => 'doNotSkip'      
    }
  },
  'interface' => {
     'sys' => {
      'standard' => {
        'indexed' => 'true',
        'snmp' => {
          'ifOperStatus' => {
            'title' => 'Oper Status'
          },
          'ifDescr' => {
            'title' => 'Interface'
          },
          'ifSpeed' => {
            'title' => 'Bandwidth',
          },
	  'ifPhysAddress' => {
            'title' => 'Physical Address',
          },
          'ifAdminStatus' => {
            'title' => 'Admin Status'
          },
          'Description' => {
            'title' => 'Description (ifDescr)'
          },
          'ifType' => {
            'title' => 'Type (ifType)'
          },
          'ifLastChange' => {
            'title' => 'Last Change'
          }
        },
      }
    },
    'rrd' => {
      'interface' => {
        'indexed' => 'true',
        'snmp' => {
          'ifOperStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifOperStatus',
            'option' => 'gauge,0:100'
          },
          'ifDescr' => {
            'replace' => {
              '6' => 'Ethernet',
              '188' => 'Wlan',
              '135' => 'Vlan'
            },
            'oid' => 'ifType'
          },
          'ifInOctets' => {
            'oid' => 'ifInOctets',
            'option' => 'counter,0:U'
          },
          'ifHCOutOctets' => {
            'oid' => 'ifHCOutOctets',
            'option' => 'counter,0:U'
          },
          'ifAdminStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifAdminStatus'
          },
          'ifOutOctets' => {
            'oid' => 'ifOutOctets',
            'option' => 'counter,0:U'
          },
          'ifHCInOctets' => {
            'oid' => 'ifHCInOctets',
            'option' => 'counter,0:U'
          }
        },
        'threshold' => 'util_in,util_out,dropped_util_in,dropped_util_out',
        'graphtype' => 'bits,abits,maxbits,util,autil'
      },
  		'pkts_hc' => {
  			'indexed' => 'true',
        'threshold' => 'pkt_errors_in,pkt_errors_out',
        'graphtype' => 'pkts_hc,errpkts_hc',
  			'snmp' => {
  				'ifHCInOctets' => {
  					'oid' => 'ifHCInOctets',
  					'option' => 'counter,0:U'
  				},
  				'ifHCInUcastPkts' => {
  					'oid' => 'ifHCInUcastPkts',
  					'option' => 'counter,0:U'
  				},
  				'ifHCInMcastPkts' => {
  					'oid' => 'ifHCInMulticastPkts',
  					'option' => 'counter,0:U'
  				},
  				'ifHCInBcastPkts' => {
  					'oid' => 'ifHCInBroadcastPkts',
  					'option' => 'counter,0:U'
  				},
  				'ifInDiscards' => {
  					'oid' => 'ifInDiscards',
  					'option' => 'counter,0:U'
  				},
  				'ifInErrors' => {
  					'oid' => 'ifInErrors',
  					'option' => 'counter,0:U'
  				},
  				'ifHCOutOctets' => {
  					'oid' => 'ifHCOutOctets',
  					'option' => 'counter,0:U'
  				},
  				'ifHCOutUcastPkts' => {
  					'oid' => 'ifHCOutUcastPkts',
  					'option' => 'counter,0:U'
  				},
  				'ifHCOutMcastPkts' => {
  					'oid' => 'ifHCOutMulticastPkts',
  					'option' => 'counter,0:U'
  				},
  				'ifHCOutBcastPkts' => {
  					'oid' => 'ifHCOutBroadcastPkts',
  					'option' => 'counter,0:U'
  				},
  				'ifOutDiscards' => {
  					'oid' => 'ifOutDiscards',
  					'option' => 'counter,0:U'
  				},
  				'ifOutErrors' => {
  					'oid' => 'ifOutErrors',
  					'option' => 'counter,0:U'
  				},
  			}
  		}
    },
    'collect' => {
      'Description' => '(CNOC|Collection)',
    },
    'nocollect' => {
      'ifOperStatus' => 'other',
      'ifDescr' => 'virtual-access',
      'Description' => '123',
      #'noDescription' => 'true',
      'ifType' => 'lapd|ds0|ds1|other|softwareloopback|isdn'
    },
    'noevent' => {
      'Description' => '^!',
      'ifDescr' => 'null',
      'ifType' => 'other'
    }
  },
  'alerts' => {
    'AviatWirelessLinkQuality' => {
        'TXMod' => {
          'type' => 'test',
          'test' => 'CVAR1=TXMod; "$CVAR1" < "5"',
          'value' => 'CVAR1=TXMod; $CVAR1',
          'level' => 'Major',
          'element' => 'RadioID',
          'event' => 'TX Modulation Drop'
        },
        'RXMod' => {
          'type' => 'test',
          'test' => 'CVAR1=RXMod; "$CVAR1" < "5"',
          'value' => 'CVAR1=RXMod; $CVAR1',
          'level' => 'Major',
          'element' => 'URadioID',
          'event' => 'RX Modulation Drop'
        },
      },
  }
);
