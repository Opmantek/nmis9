#
#  Copyright 1999-2014 Opmantek Limited (www.opmantek.com)
#
#  ALL CODE MODIFICATIONS MUST BE SENT TO CODE@OPMANTEK.COM
#
#  This file is part of Network Management Information System ("NMIS").
#
#  NMIS is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  NMIS is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with NMIS (most likely in a file named LICENSE).
#  If not, see <http://www.gnu.org/licenses/>
#
#  For further information on NMIS or for a license other than GPL please see
#  www.opmantek.com or email contact@opmantek.com
#
#  User group details:
#  http://support.opmantek.com/users/
#
# *****************************************************************************

%hash = (
  '-common-' => {
    'class' => {
      'database' => {
        'common-model' => 'database'
      },
      'threshold' => {
        'common-model' => 'threshold'
      },
      'summary' => {
        'common-model' => 'summary'
      },
      'heading' => {
        'common-model' => 'heading'
      },
      'stats' => {
        'common-model' => 'stats'
      },
      'event' => {
        'common-model' => 'event'
      }
    }
  },

  'system' => {
		# the graphs on front page
    'nodegraph' => 'health,response,APCPDULoad', 
    'nodeModel' => 'APC-pdu-ap7932',
    'nodeType' => 'generic',
    'sys' => {
      'standard' => {
        'snmp' => {
          'sysLocation' => {
            'replace' => {
              '' => 'default'
            },
            'oid' => 'sysLocation',
            'title' => 'Location'
          },
          'sysDescr' => {
            'oid' => 'sysDescr',
            'title' => 'Description'
          },
          'sysObjectID' => {
            'oid' => 'sysObjectID'
          },
          'sysUpTime' => {
            'oid' => 'sysUpTime',
            'title' => 'Uptime'
          },
          'sysContact' => {
            'replace' => {
              '' => 'default'
            },
            'oid' => 'sysContact',
            'title' => 'Contact'
          },
          'sysName' => {
            'oid' => 'sysName'
          }
        }
      }, # standard

			'power' => {
				'snmp' => {

					'pduPhase1Load' => {
						'oid' => "1.3.6.1.4.1.318.1.1.12.2.3.1.1.2.1", # Phase 1 Load in A/10
						'title' => 'Phase 1 Load (Amps)',
						'calculate' => '$r / 10',
						'options' => "gauge,0:100",
					},

					'pduDeviceLoad' => {
						'oid' => "1.3.6.1.4.1.318.1.1.12.1.16.0", # Device Load in Watts
						'title' => 'Device Load (KW)',
						'calculate' => '$r / 1000',
						'options' => "integer,0:100",
					},

          'pduBank1Load' => {
            'oid' => "1.3.6.1.4.1.318.1.1.12.2.3.1.1.2.2", # Bank 1 Load in A/10
            'title' => 'Bank 1 Load (Amps)',
            'calculate' => '$r / 10',
            'options' => "gauge,0:100",
          },

          'pduBank2Load' => {
            'oid' => "1.3.6.1.4.1.318.1.1.12.2.3.1.1.2.3", # Bank 2 Load in A/10
            'title' => 'Bank 2 Load (Amps)',
            'calculate' => '$r / 10',
            'options' => "gauge,0:100",
          },

					'pduSerialNumber' => {
						'oid' => "1.3.6.1.4.1.318.1.1.12.1.6.0", # Serial Number
						'title' => 'PDU Serial Number',
					},

					'pduMfgDate' => {
						'oid' => "1.3.6.1.4.1.318.1.1.12.1.4.0", # Date of Manufacture
						'title' => 'PDU Mfg. Date',
					},

					'pduNumOutlets' => {
						'oid' => "1.3.6.1.4.1.318.1.1.12.1.8.0", # Number of Outlets
						'title' => 'PDU Outlet Count',
					},

				},
			},												# power

			'alerts' => {
				'snmp' => {
#					'OutputStatus' => {
#						'title' => "UPS Output Status",
#						'oid' => '1.3.6.1.4.1.318.1.1.1.4.1.1.0', # upsBasicOutputStatus
#						'alert' => {
#							'test' => '$r != 2',
#							'event' => "UPS Output Status",
#							'level' => 'Major',
#						}
#					},
		
#					'BatStatus' => {
#						'title' => "UPS Battery Status",
#						'oid' => 	'1.3.6.1.4.1.318.1.1.1.2.1.1.0', # upsBasicBatteryStatus
#						'alert' => {
#							'event' => "UPS Battery Status",
#							'test' => '$r != 2',
#							'level' => 'Major'
#						}
#					},
				}
			}, 											# alerts
    },

    'rrd' => {
			'power' => {
				'snmp' => {
					
					'pduPhase1Load' => {
						'oid' => "1.3.6.1.4.1.318.1.1.12.2.3.1.1.2.1", # Phase 1 Load in A/10
						'title' => 'Phase 1 Load (Amps)',
						'calculate' => '$r / 10',
						'options' => "gauge,0:100",
					},


				},

				'graphtype' => 'APCPDULoad', 
			}, # power

      'mib2ip' => {
        'snmp' => {
          'ipInAddrErrors' => {
            'oid' => 'ipInAddrErrors',
            'option' => 'counter,0:U'
          },
          'ipFragCreates' => {
            'oid' => 'ipFragCreates',
            'option' => 'counter,0:U'
          },
          'ipInDiscards' => {
            'oid' => 'ipInDiscards',
            'option' => 'counter,0:U'
          },
          'ipInReceives' => {
            'oid' => 'ipInReceives',
            'option' => 'counter,0:U'
          },
          'ipFragOKs' => {
            'oid' => 'ipFragOKs',
            'option' => 'counter,0:U'
          },
          'ipInDelivers' => {
            'oid' => 'ipInDelivers',
            'option' => 'counter,0:U'
          },
          'ipReasmFails' => {
            'oid' => 'ipReasmFails',
            'option' => 'counter,0:U'
          },
          'ipReasmReqds' => {
            'oid' => 'ipReasmReqds',
            'option' => 'counter,0:U'
          },
          'ipFragFails' => {
            'oid' => 'ipFragFails',
            'option' => 'counter,0:U'
          },
          'ipOutRequests' => {
            'oid' => 'ipOutRequests',
            'option' => 'counter,0:U'
          },
          'ipOutNoRoutes' => {
            'oid' => 'ipOutNoRoutes'
          },
          'ipInHdrErrors' => {
            'oid' => 'ipInHdrErrors',
            'option' => 'counter,0:U'
          },
          'ipForwDatagrams' => {
            'oid' => 'ipForwDatagrams',
            'option' => 'counter,0:U'
          },
          'ipOutDiscards' => {
            'oid' => 'ipOutDiscards',
            'option' => 'counter,0:U'
          },
          'ipReasmOKs' => {
            'oid' => 'ipReasmOKs',
            'option' => 'counter,0:U'
          },
          'ipInUnknownProtos' => {
            'oid' => 'ipInUnknownProtos',
            'option' => 'counter,0:U'
          }
        },
        'graphtype' => 'ip,frag'
      }
    }
	},


  'interface' => {
    'sys' => {
      'standard' => {
        'snmp' => {
          'ifOperStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifOperStatus',
            'title' => 'Oper Status'
          },
          'ifDescr' => {
            'oid' => 'ifDescr',
            'title' => 'Name (ifDescr)'
          },
          'ifSpeed' => {
            'oid' => 'ifSpeed',
            'title' => 'Bandwidth'
          },
					'ifPhysAddress' => {
            'oid' => 'ifPhysAddress',
            'title' => 'Physical Address',
          },
          'ifAdminStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifAdminStatus',
            'title' => 'Admin Status'
          },
          'Description' => {
            'oid' => 'ifAlias',
            'title' => 'Description (ifAlias)'
          },
          'ifType' => {
            'oid' => 'ifType',
            'title' => 'Type (ifType)'
          },
          'ifLastChange' => {
            'oid' => 'ifLastChange',
            'title' => 'Last Change'
          }
        },
        'indexed' => 'true'
      }
    },
    'rrd' => {
      'interface' => {
        'indexed' => 'true',
        'snmp' => {
          'ifOperStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifOperStatus',
            'option' => 'gauge,0:100'
          },
          'ifDescr' => {
            'oid' => 'ifDescr'
          },
          'ifInOctets' => {
            'oid' => 'ifInOctets',
            'option' => 'counter,0:U'
          },
          'ifAdminStatus' => {
            'replace' => {
              '6' => 'notPresent',
              '1' => 'up',
              '4' => 'unknown',
              '3' => 'testing',
              '7' => 'lowerLayerDown',
              '2' => 'down',
              '5' => 'dormant'
            },
            'oid' => 'ifAdminStatus'
          },
          'ifOutOctets' => {
            'oid' => 'ifOutOctets',
            'option' => 'counter,0:U'
          }
        },
        'threshold' => 'util_in,util_out',
        'graphtype' => 'bits,abits,maxbits,util,autil'
      },
      'pkts_hc' => {
        'indexed' => 'true',
        'threshold' => 'pkt_errors_in,pkt_errors_out',
        'graphtype' => 'pkts_hc,errpkts_hc',
        'snmp' => {
          'ifInOctets' => {
            'oid' => 'ifInOctets',
            'option' => 'counter,0:U'
          },
          'ifInUcastPkts' => {
            'oid' => 'ifInUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifInMcastPkts' => {
            'oid' => 'ifInMulticastPkts',
            'option' => 'counter,0:U'
          },
          'ifInBcastPkts' => {
            'oid' => 'ifInBroadcastPkts',
            'option' => 'counter,0:U'
          },
          'ifInDiscards' => {
            'oid' => 'ifInDiscards',
            'option' => 'counter,0:U'
          },
          'ifInErrors' => {
            'oid' => 'ifInErrors',
            'option' => 'counter,0:U'
          },
          'ifOutOctets' => {
            'oid' => 'ifOutOctets',
            'option' => 'counter,0:U'
          },
          'ifOutUcastPkts' => {
            'oid' => 'ifOutUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifOutMcastPkts' => {
            'oid' => 'ifOutMulticastPkts',
            'option' => 'counter,0:U'
          },
          'ifOutBcastPkts' => {
            'oid' => 'ifOutBroadcastPkts',
            'option' => 'counter,0:U'
          },
          'ifOutDiscards' => {
            'oid' => 'ifOutDiscards',
            'option' => 'counter,0:U'
          },
          'ifOutErrors' => {
            'oid' => 'ifOutErrors',
            'option' => 'counter,0:U'
          },
          'ifHCInOctets' => {
            'oid' => 'ifHCInOctets',
            'option' => 'counter,0:U'
          },
          'ifHCInUcastPkts' => {
            'oid' => 'ifHCInUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifHCInMcastPkts' => {
            'oid' => 'ifHCInMulticastPkts',
            'option' => 'counter,0:U'
          },
          'ifHCInBcastPkts' => {
            'oid' => 'ifHCInBroadcastPkts',
            'option' => 'counter,0:U'
          },
          'ifHCOutOctets' => {
            'oid' => 'ifHCOutOctets',
            'option' => 'counter,0:U'
          },
          'ifHCOutUcastPkts' => {
            'oid' => 'ifHCOutUcastPkts',
            'option' => 'counter,0:U'
          },
          'ifHCOutMcastPkts' => {
            'oid' => 'ifHCOutMulticastPkts',
            'option' => 'counter,0:U'
          },
          'ifHCOutBcastPkts' => {
            'oid' => 'ifHCOutBroadcastPkts',
            'option' => 'counter,0:U'
          }
        }
      }
    },
    'noevent' => {
      'ifDescr' => 'null',
      'Description' => '^!',
      'ifType' => 'other'
    },
    'nocollect' => {
      'ifOperStatus' => 'other',
      'ifDescr' => 'sublayer|null',
      'Description' => '^#',
      'noDescription' => 'false',
      'ifType' => 'other|softwareloopback|isdn'
    }
  },

  'systemHealth' => {
    'sections' => 'pduOutletStatus',
    'sys' => {
      'pduOutletStatus' => {
        'indexed' => 'rPDUOutletStatusIndex',
        'index_oid' => '.1.3.6.1.4.1.318.1.1.12.3.5.1.1.1',
        'headers' => 'rPDUOutletStatusOutletName',
        'snmp' => {
          'rPDUOutletStatusIndex' => {
            'oid' => 'rPDUOutletStatusIndex',
            'title' => 'Outlet Index'
          },
          'rPDUOutletStatusOutletName' => {
            'oid' => 'rPDUOutletStatusOutletName',
            'title' => 'Outlet Name'
          },
          'rPDUOutletStatusOutletState' => {
            'oid' => 'rPDUOutletStatusOutletState',
            'title' => 'Outlet State'
          },
        },
      },
    },
#    'rrd' => {
#      'pduOutletStatus' => {
#        'indexed' => 'true',
#        'graphtype' => 'pduOutletStatus',
#        'snmp' => {
#					'pduOutletStatus' => {
#						'oid' => 'rPDU2OutletMeteredStatusPower',
#						'title' => 'Outlet Power (Watts)',
#						'calculate' => '$r / 10',
#						'option' => 'gauge,0:U', 
#					},
#        }
#      } 
#    }
  },
#  }
);
