#
#  Copyright Opmantek Limited (www.opmantek.com)
#  
#  ALL CODE MODIFICATIONS MUST BE SENT TO CODE@OPMANTEK.COM
#  
#  This file is part of Network Management Information System ("NMIS").
#  
#  NMIS is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  NMIS is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with NMIS (most likely in a file named LICENSE).  
#  If not, see <http://www.gnu.org/licenses/>
#  
#  For further information on NMIS or for a license other than GPL please see
#  www.opmantek.com or email contact@opmantek.com 
#  
#  User group details:
#  http://support.opmantek.com/users/
#  
# *****************************************************************************

use NMIS;
use Auth;

my $C = loadConfTable();

# variables used for the security mods
my $AU = Auth->new(conf => $C);  # Auth::new will reap init values from NMIS::config
# Calling program needs to do auth, then set the ENVIRONMENT before this is called.
$AU->SetUser($ENV{'NMIS_USER'});

my @groups = ();
foreach (sort split(',',$C->{group_list})) { push @groups, $_ if $AU->InGroup($_); }

%hash = (
			Escalations => [
				{ Group => { header => 'Group',display => 'key,header,popup', value => ["default",@groups] }},
				{ Role => { header => 'Role',display => 'key,header,popup', value => [ split(/\s*,\s*/, $C->{roletype_list}) ] }},
				{ Type => { header => 'Type',display => 'key,header,popup', value => [ split(/\s*,\s*/, $C->{nodetype_list}) ] }},
				{ Event => { header => 'Event',display => 'key,header,popup', value => [ "default", sort keys %{loadGenericTable('Events')} ] }},
				{ 'Event_Node' => { header => 'Event Node',display => 'key,header,text', value => [""] }},
				{ 'Event_Element' => { header => 'Event Element',display => 'key,header,text', value => [""] }},
				{ Level0 => { header => 'Level 0',display => 'header,text', value => ["email:Contact1"] }},
				{ Level1 => { header => 'Level 1',display => 'header,text', value => ["email:Contact2"] }},
				{ Level2 => { header => 'Level 2',display => 'header,text', value => [""] }},
				{ Level3 => { header => 'Level 3',display => 'header,text', value => ["email:Contact3:Contact4"] }},
				{ Level4 => { header => 'Level 4',display => 'text', value => [""] }},
				{ Level5 => { header => 'Level 5',display => 'text', value => [""] }},
				{ Level6 => { header => 'Level 6',display => 'text', value => [""] }},
				{ Level7 => { header => 'Level 7',display => 'text', value => [""] }},
				{ Level8 => { header => 'Level 8',display => 'text', value => [""] }},
				{ Level9 => { header => 'Level 9',display => 'text', value => [""] }},
				{ Level10 => { header => 'Level 10',display => 'text', value => [""] }},
				{ UpNotify => { header => 'UpNotify',display => 'header,popup', value => ["false", "true" ] }}
			]
);

