#
#  Copyright Opmantek Limited (www.opmantek.com)
#  
#  ALL CODE MODIFICATIONS MUST BE SENT TO CODE@OPMANTEK.COM
#  
#  This file is part of Network Management Information System ("NMIS").
#  
#  NMIS is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  NMIS is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with NMIS (most likely in a file named LICENSE).  
#  If not, see <http://www.gnu.org/licenses/>
#  
#  For further information on NMIS or for a license other than GPL please see
#  www.opmantek.com or email contact@opmantek.com 
#  
#  User group details:
#  http://support.opmantek.com/users/
#  
# *****************************************************************************

use NMIS;
use Auth;

my $C = loadConfTable();
# variables used for the security mods
my $AU = Auth->new(conf => $C);  # Auth::new will reap init values from NMIS::config

# Calling program needs to do auth, then set the ENVIRONMENT before this is called.
$AU->SetUser($ENV{'NMIS_USER'});

my @groups = ();
my $GT = loadGroupTable();
foreach (sort split(',',$C->{group_list})) { push @groups, $_ if $AU->InGroup($_); }

my @nodes = ();
my $LNT = loadLocalNodeTable(); # load from file or db
foreach (sort {lc($a) cmp lc($b)} keys %{$LNT}) { push @nodes, $_ if $AU->InGroup($LNT->{$_}{group}); }

%hash = (
			Links => [
				{ subnet => { header => 'Subnet',display => 'key,header,text', value => [""] }},
				{ mask => { header => 'Mask',display => 'header,text', value => [""] }},
				{ node1 => { header => 'Node',display => 'header,popup', value => ["",@nodes] }},
				{ interface1 => { header => 'Interface',display => 'header,text', value => [""] }},
				{ ifIndex1 => { header => 'Index',display => 'text', value => [""] }},
				{ node2 => { header => 'Node',display => 'header,popup', value => ["",@nodes] }},
				{ interface2 => { header => 'Interface',display => 'header,text', value => [""] }},
				{ ifIndex2 => { header => 'Index',display => 'text', value => [""] }},
				{ ifType => { header => 'Type',display => 'text', value => [""] }},
				{ ifSpeed => { header => 'Speed',display => 'text', value => [""] }},
				{ link => { header => 'Link',display => 'header,text', value => [""] }},
				{ depend => { header => 'Depend',display => 'text', value => [""] }},
				{ role => { header => 'Role Type',display => 'popup', value => ["core", "distribution", "access"] }},
				{ net => { header => 'Net Type',display => 'popup', value => ["wan","lan"] }}
			]
);

