#!/bin/sh

# check the stated dependencies, offer to yum/apt install them

# find out where we are, and get common functions
SCRIPTPATH=${0%/*}
. $SCRIPTPATH/common_functions.sh
. $SCRIPTPATH/common_mongodb.sh
. $SCRIPTPATH/common_repos.sh

printBanner "Checking the required dependencies..."

flavour

if [ "$OSFLAVOUR" = "redhat" ]; then
		MGR=YUM
		PKGLIST="httpd httpd-tools rrdtool logrotate \
		autoconf automake gcc cairo cairo-devel \
    pango pango-devel libxml2 libxml2-devel gd gd-devel \
    libXpm-devel libXpm openssl openssl-devel net-snmp net-snmp-libs \
    net-snmp-utils perl-IO-Socket-SSL perl-Net-SSLeay \
    perl-JSON-XS fping nmap make groff perl-CPAN perl-App-cpanminus crontabs dejavu* \
    perl-libwww-perl perl-WWW-Mechanize perl-Net-DNS perl-Digest-SHA \
    perl-DBI perl-Net-SMTPS perl-Net-SMTP-SSL perl-CGI net-snmp-perl \
    perl-Proc-ProcessTable perl-Authen-SASL \
    perl-Crypt-PasswdMD5 perl-Crypt-Rijndael perl-Net-SNMP \
    perl-GD perl-SNMP_Session \
    rrdtool-perl perl-Test-Deep dialog \
    perl-Excel-Writer-XLSX perl-Digest-HMAC perl-Crypt-DES perl-Clone \
    perl-CGI \
	perl-Authen-SASL perl-B-Hooks-EndOfScope perl-boolean perl-Capture-Tiny \
	perl-Class-Inspector perl-Class-Data-Inheritable \
	perl-DateTime  perl-Devel-StackTrace \
	perl-List-MoreUtils perl-File-ShareDir perl-Carp-Assert \
	perl-Try-Tiny perl-Text-CSV perl-Text-CSV_XS perl-Tie-IxHash \
	perl-Safe-Isa perl-Test-Requires \
	perl-ExtUtils-ParseXS perl-ExtUtils-MakeMaker perl-Test-Fatal perl-Test-Number-Delta \
	perl-Class-XSAccessor perl-JSON-MaybeXS perl-Test-Deep \
	perl-namespace-clean perl-Dist-CheckConflicts perl-namespace-autoclean \
	perl-ExtUtils-Config perl-ExtUtils-Helpers perl-ExtUtils-InstallPaths \
	perl-File-Copy-Recursive perl-Scope-Guard perl-Eval-Closure \
	perl-Module-Runtime perl-Exception-Class perl-IPC-Run3 \
	perl-Sub-Exporter-Progressive perl-Perl-OSType perl-Test-NoWarnings \
	perl-YAML-LibYAML perl-Crypt-CBC perl-CryptX perl-Syntax-Keyword-Try perl-Math-Random-Secure"

		# time-modules package gone in centos/rh7
		if [ "${OS_MAJOR}" -ge 7 ]; then
				PKGLIST="$PKGLIST perl-Time-ParseDate"
		else
				PKGLIST="$PKGLIST perl-Time-modules"
		fi;

		# perl-CGI-Session gone in RHEL8
		#
		if [ "${OS_ISCENTOS:-0}" = 1 ]; then # all versions of Centos
				PKGLIST="$PKGLIST perl-CGI-Session"
		elif [ "${OS_MAJOR}" -ge 8 ]; then # RHEL8
				:
		else # RHEL7 and older
				PKGLIST="$PKGLIST perl-CGI-Session"
		fi;

elif [ "$OSFLAVOUR" = "debian" -o "$OSFLAVOUR" = "ubuntu" ]; then
		MGR=APT
		PKGLIST="build-essential apache2 rrdtool apache2-utils logrotate \
		autoconf automake gcc make libcairo2 libcairo2-dev cpanminus \
    libpango1.0-dev libxml2 libxml2-dev libgd-perl libgd-graph-perl libnet-ssleay-perl \
    libcrypt-ssleay-perl apache2 fping nmap snmp snmpd snmptrapd libnet-snmp-perl \
    libcrypt-passwdmd5-perl libjson-xs-perl libnet-dns-perl \
    libio-socket-ssl-perl libwww-perl libwww-mechanize-perl libnet-smtp-ssl-perl libnet-smtps-perl \
    libcrypt-unixcrypt-perl libcrypt-rijndael-perl libuuid-tiny-perl libproc-processtable-perl  \
    libdigest-sha-perl libnet-xmpp-perl libsafe-isa-perl libtie-ixhash-perl \
    libnet-ldap-perl libdbi-perl \
    libsoap-lite-perl libauthen-simple-radius-perl libauthen-tacacsplus-perl \
    libauthen-sasl-perl librrds-perl libtest-deep-perl dialog \
    libcrypt-des-perl libdigest-hmac-perl libclone-perl \
    libexcel-writer-xlsx-perl libsnmp-session-perl libcgi-pm-perl \
    libtime-moment-perl libdatetime-perl libstatistics-lite-perl libcarp-assert-perl \
    libtext-csv-perl libtext-csv-xs-perl libproc-queue-perl libboolean-perl liblist-moreutils-perl libpath-tiny-perl libconfig-autoconf-perl \
    libcgi-session-perl libcrypt-cbc-perl libcryptx-perl libyaml-libyaml-perl libsyntax-keyword-try-perl libmath-random-secure-perl"

		# ubuntu 16.04 needs a mongodb perl driver >= 1.2.3: we load this from cpanm
		# debian8 can't load a mongodb perl driver >= 1.2.3 from cpanm and is therefore not NMIS9 compatible
		if [ "$OSFLAVOUR" = "ubuntu" ] && [ "$OS_MAJOR" -lt 17 ]; then
				# do nothing: we will load the latest mongodb perl driver using cpanm later in the install process
				:
		else
				PKGLIST="$PKGLIST libmongodb-perl"
		fi;

		# debian: 9/stretch has that in perl, older need the updated package
		[ "$OSFLAVOUR" = "debian" -a "$OS_MAJOR" -lt 9 ] && PKGLIST="$PKGLIST libsys-syslog-perl";
		# only 9/stretch doesn't have that packaged
		[ "$OSFLAVOUR" = "debian" -a "$OS_MAJOR" != 9 ] && PKGLIST="$PKGLIST libui-dialog-perl";

		# ubuntu: not packaged for 17 to 19
		[ "$OSFLAVOUR" = "ubuntu" ] && [ "$OS_MAJOR" -le 16 -o "$OS_MAJOR" -ge 20 ] \
				&& PKGLIST="$PKGLIST libui-dialog-perl";

		# libtime-modules-perl not packaged for Ubuntu 20.04 and newer, and Debian10 and newer
		# libtime-parsedate-perl is a drop-in replacement on ubuntu and probably debian
		# but we will only apply this fix as needed atm.
		if [ "$OSFLAVOUR" = "ubuntu" -a "$OS_MAJOR" -ge 20 ] || [ "$OSFLAVOUR" = "debian" -a "$OS_MAJOR" -ge 10 ]; then
			PKGLIST="$PKGLIST libtime-parsedate-perl";
		else
			PKGLIST="$PKGLIST libtime-modules-perl libtime-parsedate-perl";
		fi;
fi;

is_web_available && CANUSEWEB=1
if [ "$CANUSEWEB" != 1 ]; then
		cat <<EOF

Your system cannot access the web, therefore $MGR will not
be able to download any missing software packages. If any
such missing packages are detected and you don't have
a local source of packages (e.g. an installation DVD) then the
installation won't complete successfully.

We recommend that you check our Wiki article on working around
package installation without Internet access in that case:

    https://community.opmantek.com/x/boSG

EOF
		input_ok "Hit <Enter> when ready to continue: "
fi

if [ "$CANUSEWEB" = 1 ]; then
	if { [ "${OSFLAVOUR}" = "ubuntu" ] && [ "${OS_MAJOR}" -ge 19 ]; }; then
		printBanner "Checking if 'libssl1.1' is installed..."
		# FIX FOR UBUNTU >= 19.00 WHICH REQUIRES libssl1.0.0 WHEN INSTALLING MONGODB:
		# prime_apt is called during  install_package() and after disable_distro() functions:
#		NEEDDISTRO="bionic";
#		# this function calls enable_distro
		haveit=`dpkg -l | grep libssl1.1 2>/dev/null`
		if [ -z "$haveit" ]; then
			echolog "Installing 'libssl1.1'"
			execPrint dpkg -i installer_hooks/libraries/libssl1.1_1.1.1f-1ubuntu2_amd64.deb
		else
			echolog "'libssl1.1' is already installed."
		fi;
		unset haveit
		# clean up as this was temporary
#		disable_distro "${NEEDDISTRO}";
#	elif [ "${OSFLAVOUR}" = "debian" ] && [ "${OS_MAJOR}" -ge 10 ]; then
#		# FIX FOR DEBIAN >= 10 WHICH REQUIRES libssl1.0.0 AND jessie GPG PUBKEY WHEN INSTALLING MONGODB:
#		# prime_apt is called during  install_package() and after disable_distro() functions:
#		NEEDDISTRO="jessie";
#		# get the release key first
#		type wget >/dev/null 2>&1 && GIMMEKEY="wget --tries=5 -q -T 20 -O - https://ftp-master.debian.org/keys/archive-key-8.asc" || GIMMEKEY="curl --retry 4 -L -s -m 20 https://ftp-master.debian.org/keys/archive-key-8.asc";
#		# apt-key adv doesn't work cleanly with gpg 2.1+
#		execPrint "$GIMMEKEY | apt-key add -"||:;
#		# this function calls enable_distro
#		install_package "libssl1.0.0";
#		# clean up as this was temporary
#		disable_distro "${NEEDDISTRO}";
	else
		# default action where above fix not needed
		[ "$OSFLAVOUR" = "redhat" ] && prime_yum
		[ "$OSFLAVOUR" = "debian" -o "$OSFLAVOUR" = "ubuntu" ] && prime_apt
	fi;
fi

# check and get mongodb, returns 0 if ok, 1 or 2 otherwise
# absolute min for nmis 9 is 3.4.0
printBanner "Checking if mongoDB is installed..."
mongo_or_bust 3 4 0 || exit 1


# rhel8 fails to install these using yum, but centos8 is able to install these using yum - restrict to rhel8 nand newer
if [ "${OSFLAVOUR}" = "redhat" ]; then
	if [ "$OS_ISCENTOS" != 1 ] && [ "${OS_MAJOR}" -ge 8 ]; then
        if [ "$CANUSEWEB" = 1 ]; then
            printBanner "Some required packages need to be installed first!"
            echo "$PRODUCT requires the following packages to be installed first:";
            echo
            echo "perl-CPAN perl-App-cpanminus using $MGR";
            echo "Devel::GlobalDestruction::XS and Proc::Queue using CPANM";
            echo
            echo "The installer can download and install these packages.";
            if input_yn "Do you want to install these packages now?" "5af4"; then
                REPO='';
                NEEDREPO='';
                install_package "perl-CPAN"||:;
                install_package "perl-App-cpanminus"||:;
                if type cpanm >/dev/null; then
                    if [ -n "${UNATTENDED}" ]; then
                            PROMPT="";
                    else
                            PROMPT="--prompt";
                    fi;
                    cpanm Devel::GlobalDestruction::XS --sudo "${PROMPT}" 2>&1||:; # can't use execprint as cpanm may be interactive
                    cpanm Proc::Queue --sudo "${PROMPT}" 2>&1||:; # can't use execprint as cpanm may be interactive
                    unset PROMPT;
                fi;
                unset REPO;
                unset NEEDREPO;
            fi;
        fi;
	else # not RHEL8 - install from Package Manager
		PKGLIST="$PKGLIST perl-Devel-GlobalDestruction-XS perl-Proc-Queue";
	fi;
fi;


# I've kept this code here in case it becomes relevant later and for informational purposes.
# The reason we don't use this method to install MongoDB-v2.2.1 perl driver
# is that the tests 'cpanm --test-only MongoDB' still fail after yum installs the NMIS9 dependencies.
#
#### Centos 7 install of MongoDB-v2.2.1 perl driver fails at crud_spec.t, UNLESS we install it first:
###if [ "${OSFLAVOUR}" = "redhat" ] && [ "${OS_MAJOR}" -eq 7 ]; then
###		printBanner "Some required packages need to be installed first!"
###		echo "$PRODUCT requires the following packages to be installed first:";
###		echo
###		echo "perl-CPAN perl-App-cpanminus using $MGR";
###		echo "MongoDB using CPANM";
###		echo
###		echo "The installer can download and install these packages.";
###		if input_yn "Do you want to install these packages now?" "3fa2"; then
###				REPO='';
###				NEEDREPO='';
###				install_package "perl-CPAN"||:;
###				install_package "perl-App-cpanminus"||:;
###				if type cpanm >/dev/null; then
###						if [ -n "${UNATTENDED}" ]; then
###								PROMPT="";
###						else
###								PROMPT="--prompt";
###						fi;
###						cpanm MongoDB --sudo "${PROMPT}" 2>&1||:; # can't use execprint as cpanm may be interactive
###						unset PROMPT;
###				fi;
###				unset REPO;
###				unset NEEDREPO;
###		fi;
###fi;


# sets MISSING, returns 1 if missing stuff
printBanner "Checking Installed Packages"
if ! check_missing_packages $PKGLIST; then

		printBanner "Some required packages are missing!"
		echo "$PRODUCT requires the following packages which are not installed:";
		echo
		echo $MISSING;
		echo
		echo "The installer can use $MGR to download and install these packages.";

		if input_yn "Do you want to install these packages with $MGR now?" "7ce6"; then

				for pkg in $MISSING; do
						if [ "$OSFLAVOUR" = "redhat" ]; then
								REPO=''
								NEEDREPO=''
								if [ "$pkg" = "perl-Net-SNMP" \
														-o "$pkg" = "glib" \
														-o "$pkg" = "glib-devel" \
														-o "$pkg" = "perl-Crypt-Rijndael" \
														-o "$pkg" = "perl-JSON-XS" \
														-o "$pkg" = "perl-Net-SMTPS" \
														-o "$pkg" = "perl-WWW-Mechanize" \
														-o "$pkg" = "perl-Proc-ProcessTable" ] || \
								   { [ "${OS_MAJOR}" -eq 7 ] && [ "${OS_ISCENTOS:-0}" != 1 ] && [ "$pkg" = "net-snmp-perl" -o "$pkg" = "gd-devel" ]; }; then
										REPO="--enablerepo=epel"
										NEEDREPO="epel"
										REPONAME="EPEL"
										REPOURL="https://fedoraproject.org/wiki/EPEL/"
								elif [ "$OS_MAJOR" = 6 ]  &&  [ "$pkg" = "rrdtool" -o "$pkg" = "fping" -o "$pkg" = "rrdtool-perl" ]; then
										REPO="--enablerepo=gf-plus"
										NEEDREPO="gf"
										REPONAME="Ghettoforge"
										REPOURL="http://ghettoforge.org/"
								fi
						elif [ "$OSFLAVOUR" = "debian" -a "$OS_MAJOR" -ge "9" ]; then
								NEEDDISTRO=''
#								# librrd4 and libpng12-0 are only present up to jessie/8
#								if [ "$pkg" = "librrd4" -o "$pkg" = "libpng12-0" ]; then
#										NEEDDISTRO="jessie"
#								fi
						elif [ "$OSFLAVOUR" = "ubuntu" -a \( "$OS_MAJOR" -gt "16" -o \( "$OS_MAJOR" = "16" -a "$OS_MINOR" -gt "4" \) \) ] ; then
								NEEDDISTRO=''
#								# librrd4 and libpng12-0 are only present up to xenial/16.04, NOT 16.10...
#								if [ "$pkg" = "librrd4" -o "$pkg" = "libpng12-0" ]; then
#										NEEDDISTRO="xenial"
#								fi
						fi

						install_package $pkg
						RES=$?

						if [ "$OSFLAVOUR" = "redhat" -a "$pkg" = "httpd" ]; then
								# silly redhat doesn't start services on installation
								if type systemctl >/dev/null 2>&1 && systemctl daemon-reload >/dev/null 2>&1; then
									execPrint "systemctl is-enabled -q httpd || systemctl enable httpd";
								else
									execPrint "chkconfig --add httpd";
									execPrint "chkconfig httpd on";
								fi;
						fi
				done

		else
				echolog "Packages missing but installer was instructed to NOT install them."
				cat <<EOF

$PRODUCT will not run without the following packages installed:

$MISSING

You will have to resolve these
dependencies manually before $PRODUCT will operate properly.

EOF
				input_ok "Hit <Enter> when ready to continue: "
		fi
fi
echo

version_check_ntp_type_service;
echo;

exit 0
